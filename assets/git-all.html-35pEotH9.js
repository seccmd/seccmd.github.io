import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as t,o as n}from"./app-Dp2OJTf-.js";const e={};function l(h,i){return n(),a("div",null,[...i[0]||(i[0]=[t(`<h1 id="git操作指南" tabindex="-1"><a class="header-anchor" href="#git操作指南"><span>Git操作指南</span></a></h1><p>为个人开发者量身定制的极简Git操作指南，聚焦<strong>存档代码、开启分支、回滚、发布版本</strong>四大核心需求，仅需掌握10个命令即可覆盖90%个人开发场景：</p><hr><h2 id="知识学习" tabindex="-1"><a class="header-anchor" href="#知识学习"><span>知识学习</span></a></h2><ul><li>(<a href="https://liaoxuefeng.com/books/git/introduction/index.html" target="_blank" rel="noopener noreferrer">https://liaoxuefeng.com/books/git/introduction/index.html</a>)</li></ul><h3 id="⚡-一、极简操作清单-10个命令解决所有需求" tabindex="-1"><a class="header-anchor" href="#⚡-一、极简操作清单-10个命令解决所有需求"><span>⚡ <strong>一、极简操作清单（10个命令解决所有需求）</strong></span></a></h3><table><thead><tr><th><strong>场景</strong></th><th><strong>命令</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><strong>1. 存档当前代码</strong></td><td><code>git add .</code> → <code>git commit -m &quot;描述&quot;</code></td><td>添加所有修改并提交到本地仓库（描述写清楚功能点，如<code>feat: 添加支付模块</code>）</td></tr><tr><td><strong>2. 开启新分支</strong></td><td><code>git checkout -b feature/功能名</code></td><td>创建并切换到新分支（如<code>feature/user-profile</code>）</td></tr><tr><td><strong>3. 回滚到历史版本</strong></td><td><code>git reset --hard 提交ID</code></td><td><strong>彻底丢弃</strong>最新提交（提交ID用<code>git log --oneline</code>查看前7位）</td></tr><tr><td></td><td><code>git revert 提交ID</code></td><td><strong>安全回滚</strong>：生成新提交抵消错误（保留历史记录）</td></tr><tr><td><strong>4. 发布正式版本</strong></td><td><code>git tag -a v1.0.0 -m &quot;正式版发布&quot;</code></td><td>为当前提交打标签（版本号遵循<code>主版本.次版本.修订号</code>）</td></tr><tr><td></td><td><code>git push origin --tags</code></td><td>推送标签到远程仓库（如GitHub）</td></tr><tr><td><strong>5. 分支合并与清理</strong></td><td><code>git checkout main</code> → <code>git merge feature/功能名</code></td><td>切换回主分支并合并新功能</td></tr><tr><td></td><td><code>git branch -d feature/功能名</code></td><td>删除已合并的分支（保持仓库简洁）</td></tr></tbody></table><blockquote><p>💡 <strong>个人使用技巧</strong>：</p></blockquote><ul><li><strong>分支命名</strong>：直接用<code>功能名</code>（如<code>refactor-header</code>），无需加<code>feature/</code>前缀（团队协作时才需规范）</li><li><strong>提交频率</strong>：每完成一个小功能就提交一次，避免积累大量改动</li><li><strong>备份</strong>：每日结束时执行<code>git push</code>，防止本地丢失</li></ul><hr><h3 id="⚠️-二、避坑指南-个人开发者常见问题" tabindex="-1"><a class="header-anchor" href="#⚠️-二、避坑指南-个人开发者常见问题"><span>⚠️ <strong>二、避坑指南（个人开发者常见问题）</strong></span></a></h3><ol><li><strong>误删未提交的代码</strong><ul><li>场景：写了代码但未<code>git add</code>就误删文件</li><li>恢复：用文件恢复软件（如Recuva），<strong>Git无法恢复未跟踪的文件</strong></li></ul></li><li><strong>回滚后后悔了</strong><ul><li>场景：<code>git reset --hard</code> 后发现删错了提交</li><li>恢复：用 <code>git reflog</code> 找到操作前的提交ID，再 <code>git reset --hard 旧ID</code></li></ul></li><li><strong>发布版本后需修复Bug</strong><ul><li>操作：基于标签创建热修复分支 → 修复后打新标签</li></ul></li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">              # 切换到发布标签</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hotfix/login</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 创建修复分支</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;fix: 修复登录超时&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 提交修复</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tag</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.0.1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;紧急修复登录问题&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 打新标签</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --tags</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            # 推送新版本</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="🌰-三、实战场景示例-从开发到发布" tabindex="-1"><a class="header-anchor" href="#🌰-三、实战场景示例-从开发到发布"><span>🌰 <strong>三、实战场景示例（从开发到发布）</strong></span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 1. 开发新功能：用户头像上传</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user-avatar</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     # 创建分支</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> avatar-upload.js</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 开发代码...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;feat: 用户头像上传功能&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user-avatar</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     # 备份到远程</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 2. 发现旧版本BUG需回滚</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">               # 切回主分支</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> log</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --oneline</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">               # 查看历史（假设要回滚到a1b2c3d）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> reset</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --hard</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a1b2c3d</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        # 回滚到稳定版本</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 3. 发布新版本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tag</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v2.0.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;支持头像上传&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 打标签</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --tags</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">          # 发布到远程</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="🧰-四、辅助工具推荐-个人开发效率翻倍" tabindex="-1"><a class="header-anchor" href="#🧰-四、辅助工具推荐-个人开发效率翻倍"><span>🧰 <strong>四、辅助工具推荐（个人开发效率翻倍）</strong></span></a></h3><ol><li><strong>VSCode Git图形化</strong>：侧边栏一键提交/推送/切换分支（Ctrl+Shift+G）</li><li><strong>GitHub Desktop</strong>：拖拽管理分支，可视化回滚操作（适合新手）</li><li><strong>GitLens插件</strong>：在代码行内显示最后修改者，快速定位问题</li></ol><blockquote><p><strong>最终建议</strong>：</p></blockquote><ol><li>主分支（<code>main</code>）仅用于发布稳定版本，新功能全在新分支开发</li><li>每次发布后打标签，版本号严格递增（<code>v1.0.0</code> → <code>v1.0.1</code>）</li><li>重要操作前备份：<code>git push</code> 或复制整个项目文件夹</li></ol><p>掌握以上核心操作，个人项目开发效率提升50%，再也不用纠结复杂流程！</p><p>在Git工作流中，主分支（<code>main</code>）、功能开发分支（<code>feature</code>）和标签（<code>tag</code>）是三个核心组件，它们的关系和协作流程构成了版本控制的基础框架。以下是三者的关系及标准工作流程的详细解析：</p><hr><h3 id="🔧-一、核心关系与角色定位" tabindex="-1"><a class="header-anchor" href="#🔧-一、核心关系与角色定位"><span>🔧 <strong>一、核心关系与角色定位</strong></span></a></h3><table><thead><tr><th><strong>组件</strong></th><th><strong>核心作用</strong></th><th><strong>生命周期</strong></th><th><strong>关键特性</strong></th></tr></thead><tbody><tr><td><strong>主分支（main）</strong></td><td>代表生产环境的稳定代码，仅包含可发布的版本。</td><td>永久存在</td><td>禁止直接开发，仅接受合并请求。</td></tr><tr><td><strong>功能分支（feature）</strong></td><td>隔离开发新功能或修复，避免污染主分支代码。</td><td>临时存在（功能完成后删除）</td><td>从主分支创建，命名需明确（如<code>feat/user-login</code>）。</td></tr><tr><td><strong>标签（tag）</strong></td><td>标记主分支上的关键提交（如版本发布），提供不可变的版本快照。</td><td>永久存在</td><td>静态指针，支持语义化版本（如<code>v1.0.0</code>）。</td></tr></tbody></table><blockquote><p><strong>协作逻辑</strong>：<br> 功能分支是<strong>开发沙盒</strong>，主分支是<strong>稳定基线</strong>，标签是<strong>版本锚点</strong>。<br> 开发流程：功能分支 → 合并到主分支 → 主分支打标签。</p></blockquote><hr><h3 id="🔄-二、标准工作流程-从开发到发布" tabindex="-1"><a class="header-anchor" href="#🔄-二、标准工作流程-从开发到发布"><span>🔄 <strong>二、标准工作流程（从开发到发布）</strong></span></a></h3><h4 id="_1-功能开发阶段" tabindex="-1"><a class="header-anchor" href="#_1-功能开发阶段"><span><strong>1. 功能开发阶段</strong></span></a></h4><ul><li><strong>创建功能分支</strong>：从主分支切出新分支进行开发。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">              # 切换到主分支</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           # 同步最新代码</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feat/payment</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # 创建并切换功能分支</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>开发与提交</strong>：在功能分支上编码并提交。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">                      # 暂存更改</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;新增支付接口&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     # 提交到本地</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feat/payment</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 推送到远程</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-合并到主分支" tabindex="-1"><a class="header-anchor" href="#_2-合并到主分支"><span><strong>2. 合并到主分支</strong></span></a></h4><ul><li><strong>代码审查与测试</strong>：通过Pull Request（PR）或合并请求将功能分支合并到主分支。</li><li><strong>合并操作</strong>：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">              # 切回主分支</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> merge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feat/payment</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         # 合并功能分支</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">           # 推送更新</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-版本发布与打标签" tabindex="-1"><a class="header-anchor" href="#_3-版本发布与打标签"><span><strong>3. 版本发布与打标签</strong></span></a></h4><ul><li><strong>创建标签</strong>：在主分支的合并提交上打标签，标记版本。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tag</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.2.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;发布支付功能&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 创建附注标签（含版本描述）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.2.0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">             # 推送标签到远程</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>语义化版本规范</strong>： <ul><li><code>v主版本.次版本.修订号</code>（如<code>v1.2.0</code>）： <ul><li><strong>主版本</strong>：不兼容的API变更（重大升级）。</li><li><strong>次版本</strong>：向下兼容的功能新增。</li><li><strong>修订号</strong>：向下兼容的问题修复。</li></ul></li></ul></li></ul><h4 id="_4-清理与维护" tabindex="-1"><a class="header-anchor" href="#_4-清理与维护"><span><strong>4. 清理与维护</strong></span></a></h4><ul><li><strong>删除功能分支</strong>：合并后及时清理。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> branch</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feat/payment</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 删除本地分支</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --delete</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feat/payment</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 删除远程分支</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>标签回溯</strong>：通过标签快速检出历史版本。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.2.0</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">             # 切换到标签对应代码</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="🛠️-三、关键场景与最佳实践" tabindex="-1"><a class="header-anchor" href="#🛠️-三、关键场景与最佳实践"><span>🛠️ <strong>三、关键场景与最佳实践</strong></span></a></h3><ol><li><strong>紧急修复（Hotfix）</strong>： <ul><li>从主分支创建<code>hotfix</code>分支修复 → 合并到主分支 → 打新标签（如<code>v1.2.1</code>）。</li></ul></li><li><strong>版本回滚</strong>： <ul><li>使用<code>git revert</code>撤销错误提交，或直接基于标签重新发布旧版本。</li></ul></li><li><strong>自动化集成</strong>： <ul><li>CI/CD工具（如GitLab CI）监听标签推送事件，自动触发构建和部署：</li></ul></li></ol><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">deploy_job</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  only</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/^v\\d+\\.\\d+\\.\\d+$/</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 仅当标签匹配语义化版本时触发</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">./deploy.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="💎-四、总结-三者的核心协作逻辑" tabindex="-1"><a class="header-anchor" href="#💎-四、总结-三者的核心协作逻辑"><span>💎 <strong>四、总结：三者的核心协作逻辑</strong></span></a></h3><ol><li><strong>功能分支</strong>：开发隔离 → 保证主分支稳定性。</li><li><strong>主分支</strong>：整合已验证的功能 → 作为发布基准。</li><li><strong>标签</strong>：固化主分支状态 → 提供可追溯的版本快照。</li></ol><blockquote><p><strong>流程口诀</strong>：<br> 开发在分支（<code>feature</code>），稳定在主支（<code>main</code>），发布靠标签（<code>tag</code>）。</p></blockquote><p>通过此流程，团队可高效协作，同时确保生产代码的稳定性和可追溯性。</p><h2 id="github使用全攻略-快速安装、认证方案与仓库操作指南" tabindex="-1"><a class="header-anchor" href="#github使用全攻略-快速安装、认证方案与仓库操作指南"><span>Github使用全攻略：快速安装、认证方案与仓库操作指南</span></a></h2><h3 id="快速安装" tabindex="-1"><a class="header-anchor" href="#快速安装"><span>快速安装</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>1.申请API Token:</span></span>
<span class="line"><span>User_xxx Token_yyy</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2.下载代码仓库，执行脚本</span></span>
<span class="line"><span>cd /opt/apps/falcon/</span></span>
<span class="line"><span>git clone https://www.github.com/test/Spring3.git</span></span>
<span class="line"><span>cd Spring3 &amp;&amp; sh test.sh</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3.执行命令，上传数据</span></span>
<span class="line"><span>cd /opt/apps/falcon/Spring3/</span></span>
<span class="line"><span>ifconfig &gt; if.txt</span></span>
<span class="line"><span>git add --all &amp;&amp; git commit -m a &amp;&amp; git push https://user:pass@github.com/test/Spring3.git --all</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>########################################################</p><h2 id="ssh-key认证方案-注-一个pubkey不能在多个项目中使用会报错" tabindex="-1"><a class="header-anchor" href="#ssh-key认证方案-注-一个pubkey不能在多个项目中使用会报错"><span>SSH-Key认证方案 注：一个pubkey不能在多个项目中使用会报错</span></a></h2><ol><li>ssh-keygen.exe</li><li>cat ~/.ssh/id_rsa.pub</li><li>Add a new public key: <a href="https://github.com/settings/ssh/new" target="_blank" rel="noopener noreferrer">https://github.com/settings/ssh/new</a></li></ol><h3 id="创建仓库-001" tabindex="-1"><a class="header-anchor" href="#创建仓库-001"><span>创建仓库 001</span></a></h3><ul><li>Link: <a href="https://github.com/test/ATM" target="_blank" rel="noopener noreferrer">https://github.com/test/ATM</a></li></ul><h3 id="下载仓库-001" tabindex="-1"><a class="header-anchor" href="#下载仓库-001"><span>下载仓库 001</span></a></h3><pre><code>$ git clone git@github.com:test/ATM.git
$ git config --global user.email &quot;you@example.com&quot;
$ git config --global user.name &quot;Your Name&quot;
</code></pre><h3 id="提交修改-001" tabindex="-1"><a class="header-anchor" href="#提交修改-001"><span>提交修改 001</span></a></h3><pre><code>1. Open Git-Bash
2. cd ~/Desktop/github/Atom
3. git add --all; git commit -m &#39;test it&#39;; git push
</code></pre><p>########################################################</p><h2 id="token认证方案" tabindex="-1"><a class="header-anchor" href="#token认证方案"><span>Token认证方案</span></a></h2><p>1.申请API Token: <a href="https://github.com/settings/tokens" target="_blank" rel="noopener noreferrer">https://github.com/settings/tokens</a></p><blockquote><p>Token_xxx</p></blockquote><h3 id="创建仓库-002" tabindex="-1"><a class="header-anchor" href="#创建仓库-002"><span>创建仓库 002</span></a></h3><ul><li><a href="https://github.com/test/webapi" target="_blank" rel="noopener noreferrer">https://github.com/test/webapi</a></li></ul><h3 id="下载仓库-002" tabindex="-1"><a class="header-anchor" href="#下载仓库-002"><span>下载仓库 002</span></a></h3><pre><code>$ git clone https://github.com/test/webapi.git
$ git config --global user.email &quot;admin@outlook.com&quot;
$ git config --global user.name &quot;admin&quot;
</code></pre><h3 id="提交修改-002" tabindex="-1"><a class="header-anchor" href="#提交修改-002"><span>提交修改 002</span></a></h3><pre><code>1. Open Git-Bash
2. cd ~/Desktop/github/webapi
3. git add --all &amp;&amp; git commit -m a &amp;&amp; git push https://admin:pass@github.com/test/webapi.git
</code></pre><h2 id="git-网络代理" tabindex="-1"><a class="header-anchor" href="#git-网络代理"><span>git 网络代理</span></a></h2><h3 id="flow" tabindex="-1"><a class="header-anchor" href="#flow"><span>Flow</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>[Working Directory] --&gt; $git add --&gt; [Staging Area] --&gt; $git commit --&gt; [Local Repository] --&gt; $git push/pull --&gt; [Remote Repository]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="示例-通过-socks5-代理访问-github" tabindex="-1"><a class="header-anchor" href="#示例-通过-socks5-代理访问-github"><span>示例：通过 SOCKS5 代理访问 GitHub</span></a></h3><p>git config --global http.proxy &#39;socks5h://127.0.0.1:1080&#39;</p><p>curl --socks5-hostname 127.0.0.1:1080 <a href="https://api.ipify.org" target="_blank" rel="noopener noreferrer">https://api.ipify.org</a></p><h3 id="git-设置-socks5-代理" tabindex="-1"><a class="header-anchor" href="#git-设置-socks5-代理"><span>Git 设置 SOCKS5 代理</span></a></h3><p>git config --global http.proxy socks5://127.0.0.1:1080</p><p>git config --global https.proxy socks5://127.0.0.1:1080</p><p>git config --global http.proxy socks5://用户名:密码@代理IP:端口</p><p>git config --global https.proxy socks5://用户名:密码@代理IP:</p><p>git config --global https.proxy socks5://user123:pass456@192.168.1.1:1080</p><h3 id="编辑-gitconfig-文件-添加" tabindex="-1"><a class="header-anchor" href="#编辑-gitconfig-文件-添加"><span>编辑 ~/.gitconfig 文件，添加：</span></a></h3><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    proxy = socks5://用户名:密码@代理IP:端口</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">https</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    proxy = socks5://用户名:密码@代理IP:端口</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="验证与取消" tabindex="-1"><a class="header-anchor" href="#验证与取消"><span>验证与取消</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http.proxy</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https.proxy</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --unset</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http.proxy</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --unset</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https.proxy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,93)])])}const k=s(e,[["render",l]]),p=JSON.parse('{"path":"/tld/dev/git-all.html","title":"Git操作指南","lang":"zh-CN","frontmatter":{"description":"Git操作指南 为个人开发者量身定制的极简Git操作指南，聚焦存档代码、开启分支、回滚、发布版本四大核心需求，仅需掌握10个命令即可覆盖90%个人开发场景： 知识学习 (https://liaoxuefeng.com/books/git/introduction/index.html) ⚡ 一、极简操作清单（10个命令解决所有需求） 💡 个人使用技巧...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git操作指南\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-14T12:34:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SecCMD\\",\\"url\\":\\"https://www.seccmd.net\\"}]}"],["meta",{"property":"og:url","content":"https://www.seccmd.net/tld/dev/git-all.html"}],["meta",{"property":"og:site_name","content":"明剑实验室"}],["meta",{"property":"og:title","content":"Git操作指南"}],["meta",{"property":"og:description","content":"Git操作指南 为个人开发者量身定制的极简Git操作指南，聚焦存档代码、开启分支、回滚、发布版本四大核心需求，仅需掌握10个命令即可覆盖90%个人开发场景： 知识学习 (https://liaoxuefeng.com/books/git/introduction/index.html) ⚡ 一、极简操作清单（10个命令解决所有需求） 💡 个人使用技巧..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-14T12:34:10.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-14T12:34:10.000Z"}]]},"git":{"createdTime":1757419694000,"updatedTime":1757853250000,"contributors":[{"name":"fireadm","username":"fireadm","email":"iwanwu@hotmail.com","commits":2,"url":"https://github.com/fireadm"}]},"readingTime":{"minutes":7.35,"words":2204},"filePathRelative":"tld/dev/git-all.md","autoDesc":true}');export{k as comp,p as data};
