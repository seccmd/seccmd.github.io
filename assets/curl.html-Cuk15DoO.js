import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as e,o as t}from"./app-DfF5zqj5.js";const n={};function l(r,s){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="curl" tabindex="-1"><a class="header-anchor" href="#curl"><span>curl</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>curl --compressed https://www.example.com/large-data</span></span>
<span class="line"><span>--compressed：请求服务器发送压缩过的响应，并在接收到数据后自动解压缩。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>curl --max-time 10 -s -w &quot;\\nHTTP_CODE: %{http_code}&quot; \${url} 2&gt;&amp;1</span></span>
<span class="line"><span></span></span>
<span class="line"><span>for i in {1..200}; do curl -sILk -w &quot;%{http_code}\\n&quot; -o /dev/null http://test.com/ ;done</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考bash脚本" tabindex="-1"><a class="header-anchor" href="#参考bash脚本"><span>参考bash脚本</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 循环读取urls.txt中的每一行（每个URL）</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> read</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 执行curl请求，并将结果（包括标准输出和标准错误输出）保存到变量中</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # url=\${url}/druid/index.html</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $url</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --max-time</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -w</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;\\nHTTP_CODE: %{http_code}&quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;"> \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 2&gt;&amp;1)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$result</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ----&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$url</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$result_file</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">done</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt; urls.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)])])}const d=i(n,[["render",l]]),c=JSON.parse('{"path":"/tld/basetools/curl.html","title":"Curl命令使用指南：参数详解与实用示例 | 高效网络请求技巧","lang":"zh-CN","frontmatter":{"date":"2024-02-01T00:00:00.000Z","title":"Curl命令使用指南：参数详解与实用示例 | 高效网络请求技巧","author":["SecCMD"],"description":"本页面聚焦curl命令的使用，详细介绍了curl命令的常用参数及其功能，如`--compressed`请求服务器发送压缩响应并自动解压缩，`--max-time`设置请求最大时长等。通过多个实用示例，包括获取压缩数据、设置请求时间及检查HTTP状态码等，帮助读者全面掌握curl命令在网络请求中的高效运用，提升网络操作技能。\\n","categories":"基础工具","tags":["curl命令"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Curl命令使用指南：参数详解与实用示例 | 高效网络请求技巧\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-11T15:21:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SecCMD\\"}]}"],["meta",{"property":"og:url","content":"https://www.seccmd.net/tld/basetools/curl.html"}],["meta",{"property":"og:site_name","content":"明剑实验室"}],["meta",{"property":"og:title","content":"Curl命令使用指南：参数详解与实用示例 | 高效网络请求技巧"}],["meta",{"property":"og:description","content":"本页面聚焦curl命令的使用，详细介绍了curl命令的常用参数及其功能，如`--compressed`请求服务器发送压缩响应并自动解压缩，`--max-time`设置请求最大时长等。通过多个实用示例，包括获取压缩数据、设置请求时间及检查HTTP状态码等，帮助读者全面掌握curl命令在网络请求中的高效运用，提升网络操作技能。\\n"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-11T15:21:33.000Z"}],["meta",{"property":"article:author","content":"SecCMD"}],["meta",{"property":"article:tag","content":"curl命令"}],["meta",{"property":"article:published_time","content":"2024-02-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-11T15:21:33.000Z"}]]},"git":{"createdTime":1737552083000,"updatedTime":1757604093000,"contributors":[{"name":"seccmd","username":"seccmd","email":"79789833+seccmd@users.noreply.github.com","commits":2,"url":"https://github.com/seccmd"},{"name":"fireadm","username":"fireadm","email":"iwanwu@hotmail.com","commits":3,"url":"https://github.com/fireadm"}]},"readingTime":{"minutes":0.97,"words":292},"filePathRelative":"tld/basetools/curl.md"}');export{d as comp,c as data};
