import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as n,o as e}from"./app-CtrcBUQV.js";const l={};function t(d,s){return e(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="uv-in-one" tabindex="-1"><a class="header-anchor" href="#uv-in-one"><span>UV in One</span></a></h1><p>UV 官方文档学习<br><a href="https://docs.astral.sh/uv/" target="_blank" rel="noopener noreferrer">https://docs.astral.sh/uv/</a></p><h2 id="uv-速查表" tabindex="-1"><a class="header-anchor" href="#uv-速查表"><span>UV：速查表</span></a></h2><p><a href="https://www.apframework.com/blog/essay/2025-06-07-Python-UV" target="_blank" rel="noopener noreferrer">https://www.apframework.com/blog/essay/2025-06-07-Python-UV</a></p><p>下面是 UV 工作流程中的常见操作速查表，帮助您快速查找和使用 UV 的各种命令。</p><h3 id="_1-环境管理" tabindex="-1"><a class="header-anchor" href="#_1-环境管理"><span>1 环境管理</span></a></h3><table><thead><tr><th>操作</th><th>UV 命令</th><th>传统对应命令</th></tr></thead><tbody><tr><td>创建虚拟环境</td><td><code>uv venv</code></td><td><code>python -m venv .venv</code></td></tr><tr><td>创建指定 Python 版本的虚拟环境</td><td><code>uv venv --python=3.12</code></td><td><code>python3.10 -m venv .venv</code></td></tr><tr><td>安装 Python 版本</td><td><code>uv python install 3.12</code></td><td>使用 pyenv 或系统包管理器</td></tr><tr><td>列出可用的 Python 版本</td><td><code>uv python list</code></td><td><code>pyenv versions</code></td></tr><tr><td>激活虚拟环境</td><td>使用系统激活方式</td><td><code>source .venv/bin/activate</code></td></tr></tbody></table><h3 id="_2-包管理" tabindex="-1"><a class="header-anchor" href="#_2-包管理"><span>2 包管理</span></a></h3><table><thead><tr><th>操作</th><th>UV 命令</th><th>传统对应命令</th></tr></thead><tbody><tr><td>安装单个包</td><td><code>uv pip install requests</code></td><td><code>pip install requests</code></td></tr><tr><td>从 requirements.txt 安装</td><td><code>uv pip install -r requirements.txt</code></td><td><code>pip install -r requirements.txt</code></td></tr><tr><td>安装当前项目</td><td><code>uv pip install -e .</code></td><td><code>pip install -e .</code></td></tr><tr><td>安装开发依赖</td><td><code>uv pip install -e &quot;.[dev]&quot;</code></td><td><code>pip install -e &quot;.[dev]&quot;</code></td></tr><tr><td>生成锁文件</td><td><code>uv pip compile requirements.in -o requirements.txt</code></td><td><code>pip-compile requirements.in -o requirements.txt</code></td></tr><tr><td>升级单个包</td><td><code>uv pip install --upgrade requests</code></td><td><code>pip install --upgrade requests</code></td></tr></tbody></table><h3 id="_3-项目管理" tabindex="-1"><a class="header-anchor" href="#_3-项目管理"><span>3 项目管理</span></a></h3><table><thead><tr><th>操作</th><th>UV 命令</th><th>传统对应命令</th></tr></thead><tbody><tr><td>添加依赖</td><td><code>uv add requests</code></td><td>Poetry:<code>poetry add requests</code></td></tr><tr><td>移除依赖</td><td><code>uv remove requests</code></td><td>Poetry:<code>poetry remove requests</code></td></tr><tr><td>同步环境</td><td><code>uv sync</code></td><td>Poetry:<code>poetry install</code></td></tr><tr><td>升级特定包</td><td><code>uv sync --upgrade-package requests</code></td><td>Poetry:<code>poetry update requests</code></td></tr><tr><td>升级所有包</td><td><code>uv lock --upgrade</code></td><td>Poetry:<code>poetry update</code></td></tr><tr><td>运行脚本</td><td><code>uv run python script.py</code></td><td>Poetry:<code>poetry run python script.py</code></td></tr><tr><td>构建项目</td><td><code>uv build</code></td><td>Poetry:<code>poetry build</code></td></tr></tbody></table><h3 id="_4-工具管理" tabindex="-1"><a class="header-anchor" href="#_4-工具管理"><span>4 工具管理</span></a></h3><table><thead><tr><th>操作</th><th>UV 命令</th><th>传统对应命令</th></tr></thead><tbody><tr><td>运行工具(不安装)</td><td><code>uvx ruff check .</code></td><td>pipx:<code>pipx run ruff check .</code></td></tr><tr><td>运行特定版本工具</td><td><code>uvx ruff@0.1.5 check .</code></td><td>pipx:<code>pipx run --spec=ruff==0.1.5 ruff check .</code></td></tr><tr><td>安装工具</td><td><code>uv tool install ruff</code></td><td>pipx:<code>pipx install ruff</code></td></tr><tr><td>升级工具</td><td><code>uv tool upgrade ruff</code></td><td>pipx:<code>pipx upgrade ruff</code></td></tr><tr><td>升级所有工具</td><td><code>uv tool upgrade --all</code></td><td>pipx:<code>pipx upgrade-all</code></td></tr></tbody></table><h3 id="关键区别" tabindex="-1"><a class="header-anchor" href="#关键区别"><span>关键区别</span></a></h3><table><thead><tr><th>命令</th><th>工具链</th><th>主要用途</th><th>修改项目依赖文件</th><th>安装环境</th></tr></thead><tbody><tr><td><code>uv add requests</code> 添加依赖并安装</td><td>Rye (uv)</td><td>项目管理 （添加+安装依赖）</td><td>是（pyproject.toml）</td><td>项目虚拟环境</td></tr><tr><td><code>uv pip install requests</code> 仅安装包，不管理项目依赖</td><td>Astral (uv)</td><td>快速安装包（类似 pip）</td><td>否</td><td>当前 Python 环境</td></tr></tbody></table><hr><h3 id="如何选择" tabindex="-1"><a class="header-anchor" href="#如何选择"><span>如何选择？</span></a></h3><ul><li>如果你使用 <strong>Rye</strong> 管理项目，用<code>uv add</code>保持依赖声明和安装同步。</li><li>如果只需快速安装包（无项目管理），用<code>uv pip install</code>（替代传统<code>pip</code>）。</li></ul><h2 id="uv-下一代python包管理工具" tabindex="-1"><a class="header-anchor" href="#uv-下一代python包管理工具"><span>UV：下一代Python包管理工具</span></a></h2><p><a href="https://www.apframework.com/blog/essay/2025-06-07-Python-UV" target="_blank" rel="noopener noreferrer">https://www.apframework.com/blog/essay/2025-06-07-Python-UV</a></p><h3 id="_1-创建和管理项目" tabindex="-1"><a class="header-anchor" href="#_1-创建和管理项目"><span>1. 创建和管理项目</span></a></h3><p>UV提供了一套完整的命令用于创建和管理Python项目：</p><p>创建新项目</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建一个新的Python项目目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Initialized project \`example\` at \`/路径/example\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看目录内容：</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> example</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tree</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -L</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 有三个默认文件：README.md、main.py、pyproject.toml</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .gitignore</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .python-version</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> README.md</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main.py</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">└──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pyproject.toml</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 该 main.py 文件包含一个简单的“Hello world”程序。尝试一下</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 初始化一个新的虚拟环境：uv venv，正确运行后得到虚拟环境信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> venv</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; Using CPython 3.13.1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; Creating virtual environment at: .venv</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; Activate with: source .venv/bin/activate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 直接运行main.py也可以创建虚拟环境</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 激活虚拟环境</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">.venv/bin/activate</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-依赖管理命令" tabindex="-1"><a class="header-anchor" href="#_2-依赖管理命令"><span>2. 依赖管理命令</span></a></h3><p>UV 提供了一系列强大的依赖管理命令，以下是最常用的几个：</p><p>添加依赖 使用 uv add 命令可以向项目添加依赖。<strong>该命令会自动更新 pyproject.toml 文件</strong>、锁文件和项目环境：</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-markdown"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 添加单个包</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv add requests</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 指定版本约束</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv add &#39;requests==2.31.0&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 添加 Git 依赖</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv add git+https://github.com/psf/requests</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 从 requirements.txt 文件添加所有依赖</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv add -r requirements.txt -c constraints.txt</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">删除依赖</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">使用 uv remove 命令可以删除项目依赖：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 删除包</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv remove requests</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">升级依赖</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">使用 uv lock 命令配合 --upgrade-package 参数可以升级指定包：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 升级特定包</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv lock --upgrade-package requests</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">该命令会尝试将指定包更新到最新的兼容版本，同时保持锁文件中其他依赖不变。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 从 pyproject.toml 安装项目依赖</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">当你有一个包含 pyproject.toml 的项目时，可以使用以下命令安装所有依赖：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 安装项目依赖</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv pip install -e .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 安装包含开发依赖</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv pip install -e &quot;.</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dev</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 同步项目环境</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 使用 uv sync 命令可以确保项目环境与锁文件保持同步：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 同步项目环境</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv sync</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 运行项目命令</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv run 命令可以在项目环境中运行脚本或命令。在每次运行前，UV 会验证锁文件是否与 pyproject.toml 同步，并确保环境与锁文件一致：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 运行 Python 脚本</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv run main.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 构建项目分发包</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv build 命令可用于构建项目的源码分发包和二进制分发包（wheel）：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 构建项目</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 查看构建结果</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ls dist/</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 输出示例：</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># Successfully built dist/example-0.1.0.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># Successfully built dist/example-0.1.0-py3-none-any.whl</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这些命令提供了一个完整的项目依赖管理工作流程，从添加依赖、删除依赖、升级依赖到运行项目和构建分发包。UV 的这些命令设计直观且高效，大大简化了 Python 项目的依赖管理。</p><h3 id="_3-使用工具" tabindex="-1"><a class="header-anchor" href="#_3-使用工具"><span>3. 使用工具</span></a></h3><p>UV 提供了强大的工具管理功能，可以替代 pipx 等工具来运行和管理 Python 工具。</p><p>运行工具（不安装） <strong>uvx 命令可以在不安装</strong>工具的情况下直接运行工具：</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-markdown"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 运行带参数的工具</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uvx pycowsay &quot;Hello from UV&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -------------</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt; Hello from UV &gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -------------</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   \\   ^__^</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    \\  (oo)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">______</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       (__)\\       )\\/\\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">           ||----w |</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">           ||     ||</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">运行 ruff 代码检查工具</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 运行 ruff 代码检查工具</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uvx ruff check .</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># All checks passed!</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv tool run ruff check .</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># All checks passed!</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">注意：uvx 是 uv tool run 的便捷别名。使用 uvx 运行的工具会在临时的隔离环境中安装和运行。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">指定工具版本</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">可以使用 @ 语法指定工具的版本：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 运行特定版本的工具</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uvx ruff@0.1.5 check .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 运行最新版本的工具</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uvx ruff@latest check .</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">也可以使用 --from 选项指定更复杂的版本约束：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 指定版本范围</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uvx --from &#39;ruff&gt;0.2.0,&lt;0.3.0&#39; ruff check .</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">安装工具</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">如果经常使用某个工具，可以将其安装到持久环境中，并添加到 PATH 中：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 安装 ruff 工具</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv tool install ruff</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 安装特定版本的工具</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv tool install &#39;ruff&gt;=0.3.0&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 从 Git 仓库安装工具</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv tool install git+https://github.com/astral-sh/ruff</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">安装工具后，可以直接在命令行中运行该工具，无需通过 UV 调用：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 直接运行已安装的工具</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ruff --version</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">注意：与 uv pip install 不同，安装工具不会在当前环境中提供其模块。这种隔离对于减少工具、脚本和项目之间的依赖冲突非常重要。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">升级工具</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">使用 uv tool upgrade 命令可以升级已安装的工具：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 升级特定工具</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv tool upgrade ruff</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 升级所有工具</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">uv tool upgrade --all</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">工具升级会尊重安装工具时提供的版本约束。例如，如果使用 uv tool install ruff &gt;=0.3,&lt;0.4 安装了 Ruff，然后运行 uv tool upgrade ruff，则将升级 Ruff 到 &gt;=0.3,&lt;0.4 范围内的最新版本。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="uv-入门指南" tabindex="-1"><a class="header-anchor" href="#uv-入门指南"><span>UV： 入门指南</span></a></h2><p>一个用 Rust 写的 Python 包和项目管理器</p><p>先看它自己怎么吹的~</p><ul><li>🚀 一款工具可替代<code>pip\`\`pip-tools\`\`pipx\`\`poetry\`\`pyenv\`\`twine\`\`virtualenv</code>以及更多。</li><li>⚡️ 比<code>pip</code>快 10-100 倍。</li><li>🗂️ 提供全面的项目管理，具有通用的锁文件。</li><li>❇️ 运行脚本，支持内联依赖元数据。</li><li>🛠️ 运行并安装作为 Python 包发布的工具。</li><li>🔩 包含与 pip 兼容的接口，以熟悉的命令行界面提升性能。</li><li>🖥️ 支持 macOS、Linux 和 Windows。</li></ul><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#Linux &amp; MacOS</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -LsSf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://astral.sh/uv/install.sh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sh</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#Windows</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">powershell</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ExecutionPolicy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ByPass</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;irm https://astral.sh/uv/install.ps1 | iex&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基本使用" tabindex="-1"><a class="header-anchor" href="#基本使用"><span>基本使用</span></a></h3><h3 id="管理-python" tabindex="-1"><a class="header-anchor" href="#管理-python"><span>管理 Python</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 寻找当前可用python解释器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> find</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 寻找可安装python解释器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 下载python解释器</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.13</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 卸载 Python 版本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> uninstall</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 固定 Python 版本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pin</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.13</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装虚拟环境，默认名字 .venv</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> venv</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --python</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.11</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="依赖管理" tabindex="-1"><a class="header-anchor" href="#依赖管理"><span>依赖管理</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加依赖</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> requests</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 移除依赖</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remove</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> requests</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 同步依赖</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sync</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装依赖：如果 requirements.txt 或 pyproject.toml 中定义了新依赖，uv sync 会安装它们</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 卸载多余依赖：如果当前环境中存在未在 requirements.txt 或 pyproject.toml 中定义的依赖，</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># uv sync 会自动删除它们，以保持环境的干净</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行命令" tabindex="-1"><a class="header-anchor" href="#运行命令"><span>运行命令</span></a></h3><p><code>uv run</code>命令的作用是在 uv 管理的虚拟环境中运行命令</p><p><code>uv run</code>的主要功能</p><ol><li>自动激活虚拟环境：在<code>uv venv</code>创建的环境中执行命令，而不需要手动<code>source venv/bin/activate</code></li><li>执行 Python 脚本：可以直接运行 Python 相关命令，如<code>python</code>、<code>pytest</code>、<code>flask run</code>等</li><li>运行任意终端命令：不仅限于 Python，还可以运行<code>bash</code>、<code>sh</code>等</li></ol><blockquote><p>即，uv run 的作用是激活当前 uv 项目的虚拟环境</p></blockquote><h3 id="运行二进制文件" tabindex="-1"><a class="header-anchor" href="#运行二进制文件"><span>运行二进制文件</span></a></h3><p><code>uvx</code>的作用是在 UV 虚拟环境中运行可执行文件，相当于<code>uv run</code>，但专门用于运行可执行二进制文件</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uvx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> black</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uvx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ruff</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> check</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uvx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mypy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my_script.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>什么时候用<code>uvx</code>？</p><ul><li>运行已安装的 CLI 工具（<code>black</code>、<code>ruff</code>、<code>mypy</code>、<code>pyright</code>）</li><li>确保使用 UV 虚拟环境中的二进制文件，而不是系统全局版本</li><li>在 CI/CD 或 Docker 中执行格式化、静态检查等任务</li></ul><h2 id="项目结构" tabindex="-1"><a class="header-anchor" href="#项目结构"><span>项目结构</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">.python-version</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pyproject.toml</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uv.lock</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.python-version</code>：uv 使用的 python 版本</p><p><code>pyproject.toml</code>: uv 的元数据信息</p><p><code>uv.lock</code>：用于确保所有依赖的版本一致，避免团队或生产环境中的版本差异问题。</p><h3 id="修改-pip-源" tabindex="-1"><a class="header-anchor" href="#修改-pip-源"><span>修改 pip 源</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 修改 pip 源</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 添加到 pyproject.toml文件中</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[[tool.uv.index]]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">url</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 清华源</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="python-虚拟环境" tabindex="-1"><a class="header-anchor" href="#python-虚拟环境"><span>Python 虚拟环境</span></a></h2><h3 id="_1-python-虚拟环境存在的意义" tabindex="-1"><a class="header-anchor" href="#_1-python-虚拟环境存在的意义"><span>1.Python 虚拟环境存在的意义</span></a></h3><p>试想一下，你的公司有两个 Django 项目，一个是 django1.11 版本，一个是 django4.2 版本，而你本地只有一个 python 解释器，那你如何避免这两个不同版本的 django 之间的影响呢？</p><p>如果将两个 django 包下载到同一个 python 第三方包目录下肯定不行，python 也不允许你这么做。</p><p>那么虚拟环境就完美的解决了这一问题，通过创建虚拟环境，你可以复制出两个相互隔绝的 python 解释器环境，避免了两个不同版本 django 包的干扰，它相当于复制了本地的 python 解释器环境到指定的地方，从而避免了这类问题。</p><h3 id="_2-python-虚拟环境的管理包工具" tabindex="-1"><a class="header-anchor" href="#_2-python-虚拟环境的管理包工具"><span>2.Python 虚拟环境的管理包工具</span></a></h3><p>现在，管理 Python 虚拟环境的工具数不胜数，这里简单列出几个</p><ul><li>venv:<a href="https://docs.python.org/zh-cn/3/library/venv.html" target="_blank" rel="noopener noreferrer">文档</a></li><li>virtualenv:<a href="https://virtualenv.pypa.io/en/latest/#" target="_blank" rel="noopener noreferrer">文档</a></li><li>pyenv:<a href="https://github.com/pyenv/pyenv?tab=readme-ov-file#how-it-works" target="_blank" rel="noopener noreferrer">文档</a></li><li>pipenv:<a href="https://pipenv.pypa.io/en/latest/" target="_blank" rel="noopener noreferrer">文档</a></li></ul><h3 id="_3-virtualenv-工具管理虚拟环境" tabindex="-1"><a class="header-anchor" href="#_3-virtualenv-工具管理虚拟环境"><span>3.virtualenv 工具管理虚拟环境</span></a></h3><p>因为管理 Python 虚拟环境的工具包太多，每一个都学会太浪费时间(个人想法)，所以这里只介绍 virtualenv，个人觉得简单易用。</p><ul><li><code>下载virtualenv</code></li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">pip install virtualenv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>创建虚拟环境</code></li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">virtualenv venv</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>激活虚拟环境</code></li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sourcevenv/bin/activate</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>退出虚拟环境</code></li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">deactivate</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><a href="https://www.xxrbear.cn/tags/python/" target="_blank" rel="noopener noreferrer">python</a></li></ul>`,80)])])}const r=i(l,[["render",t]]),c=JSON.parse('{"path":"/tld/dev/uv.html","title":"UV  in One","lang":"zh-CN","frontmatter":{"description":"UV in One UV 官方文档学习 https://docs.astral.sh/uv/ UV：速查表 https://www.apframework.com/blog/essay/2025-06-07-Python-UV 下面是 UV 工作流程中的常见操作速查表，帮助您快速查找和使用 UV 的各种命令。 1 环境管理 2 包管理 3 项目管理 4...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"UV  in One\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-09T12:08:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SecCMD\\",\\"url\\":\\"https://www.seccmd.net\\"}]}"],["meta",{"property":"og:url","content":"https://www.seccmd.net/tld/dev/uv.html"}],["meta",{"property":"og:site_name","content":"明剑实验室"}],["meta",{"property":"og:title","content":"UV  in One"}],["meta",{"property":"og:description","content":"UV in One UV 官方文档学习 https://docs.astral.sh/uv/ UV：速查表 https://www.apframework.com/blog/essay/2025-06-07-Python-UV 下面是 UV 工作流程中的常见操作速查表，帮助您快速查找和使用 UV 的各种命令。 1 环境管理 2 包管理 3 项目管理 4..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-09T12:08:14.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-09T12:08:14.000Z"}]]},"git":{"createdTime":1757419694000,"updatedTime":1757419694000,"contributors":[{"name":"fireadm","username":"fireadm","email":"iwanwu@hotmail.com","commits":1,"url":"https://github.com/fireadm"}]},"readingTime":{"minutes":9.15,"words":2744},"filePathRelative":"tld/dev/uv.md","autoDesc":true}');export{r as comp,c as data};
