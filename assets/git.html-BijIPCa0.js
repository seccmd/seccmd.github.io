import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as e,o as n}from"./app-CxU3ZM_G.js";const t={};function p(l,s){return n(),a("div",null,[...s[0]||(s[0]=[e(`<h2 id="github使用全攻略-快速安装、认证方案与仓库操作指南" tabindex="-1"><a class="header-anchor" href="#github使用全攻略-快速安装、认证方案与仓库操作指南"><span>Github使用全攻略：快速安装、认证方案与仓库操作指南</span></a></h2><h3 id="快速安装" tabindex="-1"><a class="header-anchor" href="#快速安装"><span>快速安装</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>1.申请API Token:</span></span>
<span class="line"><span>User_xxx Token_yyy</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2.下载代码仓库，执行脚本</span></span>
<span class="line"><span>cd /opt/apps/falcon/</span></span>
<span class="line"><span>git clone https://www.github.com/test/Spring3.git</span></span>
<span class="line"><span>cd Spring3 &amp;&amp; sh test.sh</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3.执行命令，上传数据</span></span>
<span class="line"><span>cd /opt/apps/falcon/Spring3/</span></span>
<span class="line"><span>ifconfig &gt; if.txt</span></span>
<span class="line"><span>git add --all &amp;&amp; git commit -m a &amp;&amp; git push https://user:pass@github.com/test/Spring3.git --all</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>########################################################</p><h2 id="ssh-key认证方案-注-一个pubkey不能在多个项目中使用会报错" tabindex="-1"><a class="header-anchor" href="#ssh-key认证方案-注-一个pubkey不能在多个项目中使用会报错"><span>SSH-Key认证方案 注：一个pubkey不能在多个项目中使用会报错</span></a></h2><ol><li>ssh-keygen.exe</li><li>cat ~/.ssh/id_rsa.pub</li><li>Add a new public key: <a href="https://github.com/settings/ssh/new" target="_blank" rel="noopener noreferrer">https://github.com/settings/ssh/new</a></li></ol><h3 id="创建仓库-001" tabindex="-1"><a class="header-anchor" href="#创建仓库-001"><span>创建仓库 001</span></a></h3><ul><li>Link: <a href="https://github.com/test/ATM" target="_blank" rel="noopener noreferrer">https://github.com/test/ATM</a></li></ul><h3 id="下载仓库-001" tabindex="-1"><a class="header-anchor" href="#下载仓库-001"><span>下载仓库 001</span></a></h3><pre><code>$ git clone git@github.com:test/ATM.git
$ git config --global user.email &quot;you@example.com&quot;
$ git config --global user.name &quot;Your Name&quot;
</code></pre><h3 id="提交修改-001" tabindex="-1"><a class="header-anchor" href="#提交修改-001"><span>提交修改 001</span></a></h3><pre><code>1. Open Git-Bash
2. cd ~/Desktop/github/Atom
3. git add --all; git commit -m &#39;test it&#39;; git push
</code></pre><p>########################################################</p><h2 id="token认证方案" tabindex="-1"><a class="header-anchor" href="#token认证方案"><span>Token认证方案</span></a></h2><p>1.申请API Token: <a href="https://github.com/settings/tokens" target="_blank" rel="noopener noreferrer">https://github.com/settings/tokens</a></p><blockquote><p>Token_xxx</p></blockquote><h3 id="创建仓库-002" tabindex="-1"><a class="header-anchor" href="#创建仓库-002"><span>创建仓库 002</span></a></h3><ul><li><a href="https://github.com/test/webapi" target="_blank" rel="noopener noreferrer">https://github.com/test/webapi</a></li></ul><h3 id="下载仓库-002" tabindex="-1"><a class="header-anchor" href="#下载仓库-002"><span>下载仓库 002</span></a></h3><pre><code>$ git clone https://github.com/test/webapi.git
$ git config --global user.email &quot;admin@outlook.com&quot;
$ git config --global user.name &quot;admin&quot;
</code></pre><h3 id="提交修改-002" tabindex="-1"><a class="header-anchor" href="#提交修改-002"><span>提交修改 002</span></a></h3><pre><code>1. Open Git-Bash
2. cd ~/Desktop/github/webapi
3. git add --all &amp;&amp; git commit -m a &amp;&amp; git push https://admin:pass@github.com/test/webapi.git
</code></pre><h2 id="git-网络代理" tabindex="-1"><a class="header-anchor" href="#git-网络代理"><span>git 网络代理</span></a></h2><h3 id="flow" tabindex="-1"><a class="header-anchor" href="#flow"><span>Flow</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>[Working Directory] --&gt; $git add --&gt; [Staging Area] --&gt; $git commit --&gt; [Local Repository] --&gt; $git push/pull --&gt; [Remote Repository]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="示例-通过-socks5-代理访问-github" tabindex="-1"><a class="header-anchor" href="#示例-通过-socks5-代理访问-github"><span>示例：通过 SOCKS5 代理访问 GitHub</span></a></h3><p>git config --global http.proxy &#39;socks5h://127.0.0.1:1080&#39;</p><p>curl --socks5-hostname 127.0.0.1:1080 <a href="https://api.ipify.org" target="_blank" rel="noopener noreferrer">https://api.ipify.org</a></p><h3 id="git-设置-socks5-代理" tabindex="-1"><a class="header-anchor" href="#git-设置-socks5-代理"><span>Git 设置 SOCKS5 代理</span></a></h3><p>git config --global http.proxy socks5://127.0.0.1:1080</p><p>git config --global https.proxy socks5://127.0.0.1:1080</p><p>git config --global http.proxy socks5://用户名:密码@代理IP:端口</p><p>git config --global https.proxy socks5://用户名:密码@代理IP:</p><p>git config --global https.proxy socks5://user123:pass456@192.168.1.1:1080</p><h3 id="编辑-gitconfig-文件-添加" tabindex="-1"><a class="header-anchor" href="#编辑-gitconfig-文件-添加"><span>编辑 ~/.gitconfig 文件，添加：</span></a></h3><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">http</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    proxy = socks5://用户名:密码@代理IP:端口</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">https</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    proxy = socks5://用户名:密码@代理IP:端口</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="验证与取消" tabindex="-1"><a class="header-anchor" href="#验证与取消"><span>验证与取消</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http.proxy</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https.proxy</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --unset</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http.proxy</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --unset</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https.proxy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,38)])])}const o=i(t,[["render",p]]),d=JSON.parse('{"path":"/tld/dev/git.html","title":"Github使用全攻略","lang":"zh-CN","frontmatter":{"title":"Github使用全攻略","author":["SecCMD"],"description":"本页面聚焦Github的使用技巧，涵盖快速安装流程，包括申请API Token、下载代码仓库及执行脚本、上传数据等操作。同时详细介绍SSH-Key和Token两种认证方案，以及创建仓库、下载仓库和提交修改的具体步骤，助力用户高效使用Github进行项目管理与协作。\\n","categories":"基础工具","tags":["Github操作","认证方案","代码仓库管理"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Github使用全攻略\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-12T16:33:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SecCMD\\"}]}"],["meta",{"property":"og:url","content":"https://www.seccmd.net/tld/dev/git.html"}],["meta",{"property":"og:site_name","content":"明剑实验室"}],["meta",{"property":"og:title","content":"Github使用全攻略"}],["meta",{"property":"og:description","content":"本页面聚焦Github的使用技巧，涵盖快速安装流程，包括申请API Token、下载代码仓库及执行脚本、上传数据等操作。同时详细介绍SSH-Key和Token两种认证方案，以及创建仓库、下载仓库和提交修改的具体步骤，助力用户高效使用Github进行项目管理与协作。\\n"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-12T16:33:57.000Z"}],["meta",{"property":"article:author","content":"SecCMD"}],["meta",{"property":"article:tag","content":"代码仓库管理"}],["meta",{"property":"article:tag","content":"认证方案"}],["meta",{"property":"article:tag","content":"Github操作"}],["meta",{"property":"article:modified_time","content":"2025-09-12T16:33:57.000Z"}]]},"git":{"createdTime":1757419694000,"updatedTime":1757694837000,"contributors":[{"name":"fireadm","username":"fireadm","email":"iwanwu@hotmail.com","commits":2,"url":"https://github.com/fireadm"}]},"readingTime":{"minutes":1.75,"words":525},"filePathRelative":"tld/dev/git.md"}');export{o as comp,d as data};
