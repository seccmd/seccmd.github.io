import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as e,o as a}from"./app-CtrcBUQV.js";const l={};function t(p,s){return a(),n("div",null,[...s[0]||(s[0]=[e(`<h1 id="openssl-基础命令" tabindex="-1"><a class="header-anchor" href="#openssl-基础命令"><span>openssl 基础命令</span></a></h1><h3 id="openssl-加解密操作" tabindex="-1"><a class="header-anchor" href="#openssl-加解密操作"><span>openssl 加解密操作</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">计算MD5和SHA1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># MD5 digest</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; openssl dgst -md5 filename</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># SHA1 digest</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; openssl dgst -sha1 filename</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="openssl-查看证书" tabindex="-1"><a class="header-anchor" href="#openssl-查看证书"><span>openssl 查看证书</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#### openssl 查看证书 crt pem</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看KEY信息</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; openssl rsa -noout -text -in myserver.key</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看CSR信息</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; openssl req -noout -text -in myserver.csr</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 查看证书信息</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; openssl x509 -noout -text -in ca.crt</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 验证证书，提示self signed</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; openssl verify selfsign.crt</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 因为myserver.crt 是幅ca.crt发布的，所以会验证成功</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; openssl verify -CAfile ca.crt myserver.crt</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 去掉key的密码保护，有时候每次都要输入密码太繁琐了,可以把Key的保护密码去掉</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; openssl rsa -in myserver.key -out server.key.insecure</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="openssl-证书格式转换" tabindex="-1"><a class="header-anchor" href="#openssl-证书格式转换"><span>openssl 证书格式转换</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>一般证书有三种格式：</span></span>
<span class="line"><span>PEM(.pem) 前面命令生成的都是这种格式，</span></span>
<span class="line"><span>DER(.cer .der) Windows 上常见</span></span>
<span class="line"><span>PKCS#12文件(.pfx .p12) Mac上常见</span></span>
<span class="line"><span></span></span>
<span class="line"><span># PEM转换为DER</span></span>
<span class="line"><span>&gt; openssl x509 -outform der -in myserver.crt -out myserver.der</span></span>
<span class="line"><span></span></span>
<span class="line"><span># DER转换为PEM</span></span>
<span class="line"><span>&gt; openssl x509 -inform der -in myserver.cer -out myserver.pem</span></span>
<span class="line"><span></span></span>
<span class="line"><span># PEM转换为PKCS</span></span>
<span class="line"><span>&gt; openssl pkcs12 -export -out myserver.pfx -inkey myserver.key -in myserver.crt -certfile ca.crt</span></span>
<span class="line"><span></span></span>
<span class="line"><span># PKCS转换为PEM</span></span>
<span class="line"><span>&gt; openssl pkcs12 -in myserver.pfx -out myserver2.pem -nodes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="openssl-测试证书" tabindex="-1"><a class="header-anchor" href="#openssl-测试证书"><span>openssl 测试证书</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Openssl提供了简单的client和server工具，可以用来模拟SSL连接，做测试使用。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Client</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 连接到远程服务器</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; openssl s_client -connect www.google.com.hk:443</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 可以将服务器的证书保存下来</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; openssl s_client -connect www.google.com.hk:443 remoteserver.pem</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 转换成DER文件，就可以在Windows下直接查看了</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; openssl x509 -outform der -in remoteserver.pem -out remoteserver.cer</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Server</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 模拟的HTTPS服务，可以返回Openssl相关信息</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -accept 用来指定监听的端口号</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -cert -key 用来指定提供服务的key和证书</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; openssl s_server -accept 443 -cert myserver.crt -key myserver.key -www</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 可以将key和证书写到同一个文件中</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; cat myserver.crt myserver.key &gt; myserver.pem</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用的时候只提供一个参数就可以了</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; openssl s_server -accept 443 -cert myserver.pem -www</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>HTTPS双向认证（Mutual TLS authentication)</p><p>PKI<br><a href="https://smallstep.com/hello-mtls/doc/client/nodejs" target="_blank" rel="noopener noreferrer">https://smallstep.com/hello-mtls/doc/client/nodejs</a><br> Using Mutual TLS on the Client Side with Node.js — Smallstep</p><p><a href="https://smallstep.com/docs/step-ca" target="_blank" rel="noopener noreferrer">https://smallstep.com/docs/step-ca</a><br> step-ca open source server (<a href="http://smallstep.com" target="_blank" rel="noopener noreferrer">smallstep.com</a>)</p><p><a href="https://github.com/smallstep/cli#installation-guide" target="_blank" rel="noopener noreferrer">https://github.com/smallstep/cli#installation-guide</a><br> GitHub - smallstep/cli: 🧰 A zero trust swiss army knife for working with X509, OAuth, JWT, OATH OTP, etc.</p>`,13)])])}const d=i(l,[["render",t]]),h=JSON.parse('{"path":"/tld/prod/openssl.html","title":"openssl 基础命令","lang":"zh-CN","frontmatter":{"description":"openssl 基础命令 openssl 加解密操作 openssl 查看证书 openssl 证书格式转换 openssl 测试证书 HTTPS双向认证（Mutual TLS authentication) PKI https://smallstep.com/hello-mtls/doc/client/nodejs Using Mutual TLS ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"openssl 基础命令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-09T14:10:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SecCMD\\",\\"url\\":\\"https://www.seccmd.net\\"}]}"],["meta",{"property":"og:url","content":"https://www.seccmd.net/tld/prod/openssl.html"}],["meta",{"property":"og:site_name","content":"明剑实验室"}],["meta",{"property":"og:title","content":"openssl 基础命令"}],["meta",{"property":"og:description","content":"openssl 基础命令 openssl 加解密操作 openssl 查看证书 openssl 证书格式转换 openssl 测试证书 HTTPS双向认证（Mutual TLS authentication) PKI https://smallstep.com/hello-mtls/doc/client/nodejs Using Mutual TLS ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-09T14:10:18.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-09T14:10:18.000Z"}]]},"git":{"createdTime":1757419694000,"updatedTime":1757427018000,"contributors":[{"name":"fireadm","username":"fireadm","email":"iwanwu@hotmail.com","commits":2,"url":"https://github.com/fireadm"}]},"readingTime":{"minutes":1.62,"words":485},"filePathRelative":"tld/prod/openssl.md","autoDesc":true}');export{d as comp,h as data};
