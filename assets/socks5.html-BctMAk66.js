import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as e,o as n}from"./app-BpX6nwIg.js";const h={};function l(t,s){return n(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="socks5-服务器" tabindex="-1"><a class="header-anchor" href="#socks5-服务器"><span>SOCKS5 服务器</span></a></h1><h2 id="方案一、-microsocks" tabindex="-1"><a class="header-anchor" href="#方案一、-microsocks"><span>方案一、 Microsocks</span></a></h2><p><a href="https://github.com/rofl0r/microsocks" target="_blank" rel="noopener noreferrer">https://github.com/rofl0r/microsocks</a></p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>microsocks -1 -q -i listenip -p port -u user -P passw -b bindaddr -w wl</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>所有参数都是可选的。默认情况下，listenip 为 0.0.0.0，端口为 1080。</p><ul><li>选项 -q 禁用日志记录。</li><li>选项 -b 指定传出连接绑定到哪个 ip</li><li>选项 -w 允许指定以逗号分隔的 IP 地址白名单，这些 IP 地址可以使用代理而无需用户/密码身份验证。例如 -w 127.0.0.1,192.168.1.1.1,::1 或仅 -w 10.0.0.1 仅允许访问这些 IP，选择一个不可能猜测的用户/密码组合。</li><li>选项 -1 激活 auth_once 模式：一旦特定 IP 地址使用用户/密码成功验证，它将被添加到白名单中，并且可以在未验证的情况下使用代理。这对于不支持用户/密码验证的程序（如 Firefox）非常方便。为了使其工作，您基本上需要与支持它的另一个程序建立一个连接，然后您也可以使用 Firefox。例如，使用 curl 进行一次身份验证： curl --socks5 用户:密码@listenip:端口 anyurl</li></ul><h2 id="方案二、容器-podman-部署-socks5-操作指南" tabindex="-1"><a class="header-anchor" href="#方案二、容器-podman-部署-socks5-操作指南"><span>方案二、容器 podman 部署 socks5 操作指南</span></a></h2><p><strong>💥****牛逼内存占用极少，1G的主机，爽爆歪歪！</strong></p><ul><li>比软件干净方便，容易管理，居然还很节省</li><li>curl --socks5 100.64.0.4:1080 <a href="http://ipinfo.io" target="_blank" rel="noopener noreferrer">http://ipinfo.io</a></li></ul><p>以下是基于 Podman 部署 <code>go-socks5-proxy</code> 的详细操作指南，涵盖安装、配置和验证全流程：</p><hr><h3 id="一、安装-podman" tabindex="-1"><a class="header-anchor" href="#一、安装-podman"><span>一、安装 Podman</span></a></h3><h4 id="_1-linux-系统安装" tabindex="-1"><a class="header-anchor" href="#_1-linux-系统安装"><span>1. <strong>Linux 系统安装</strong></span></a></h4><ul><li><strong>Ubuntu/Debian</strong>：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> podman</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>CentOS/RHEL</strong>：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dnf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> podman</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>验证安装</strong>：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">podman</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 输出类似 podman 4.x.x</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_2-windows-macos-安装" tabindex="-1"><a class="header-anchor" href="#_2-windows-macos-安装"><span>2. <strong>Windows/macOS 安装</strong></span></a></h4><ul><li><strong>Windows</strong>：通过 WSL2 安装 Linux 发行版后执行上述命令。</li><li><strong>macOS</strong>：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">brew</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> podman</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">podman</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> machine</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --cpus</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4096</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --disk-size</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 初始化虚拟机</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">podman</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> machine</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="二、拉取并运行-go-socks5-proxy-镜像" tabindex="-1"><a class="header-anchor" href="#二、拉取并运行-go-socks5-proxy-镜像"><span>二、拉取并运行 <code>go-socks5-proxy</code> 镜像</span></a></h3><h4 id="_1-拉取镜像" tabindex="-1"><a class="header-anchor" href="#_1-拉取镜像"><span>1. <strong>拉取镜像</strong></span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">podman</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> docker.io/serjs/go-socks5-proxy</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 从 Docker Hub 拉取镜像</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_2-启动-socks5-代理容器" tabindex="-1"><a class="header-anchor" href="#_2-启动-socks5-代理容器"><span>2. <strong>启动 SOCKS5 代理容器</strong></span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">podman</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> socks5-proxy</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1080:1080</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  docker.io/serjs/go-socks5-proxy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>参数说明</strong>： <ul><li><code>-d</code>：后台运行容器。</li><li><code>-p 1080:1080</code>：将主机端口 1080 映射到容器端口 1080。</li><li>默认无认证，若需用户名密码认证，使用 <code>xujinkai/redsocks5</code> 镜像并添加环境变量（如 <code>-e USERNAME=admin -e PASSWORD=123456</code>）。</li></ul></li></ul><hr><h3 id="三、验证代理服务" tabindex="-1"><a class="header-anchor" href="#三、验证代理服务"><span>三、验证代理服务</span></a></h3><h4 id="_1-检查容器状态" tabindex="-1"><a class="header-anchor" href="#_1-检查容器状态"><span>1. <strong>检查容器状态</strong></span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">podman</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 确认容器状态为 &quot;Up&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_2-测试代理功能" tabindex="-1"><a class="header-anchor" href="#_2-测试代理功能"><span>2. <strong>测试代理功能</strong></span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --socks5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:1080</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://ipinfo.io</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 应返回代理服务器的IP地址</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或使用浏览器配置 SOCKS5 代理（地址 <code>127.0.0.1</code>，端口 <code>1080</code>）访问验证。</p><hr><h3 id="四、高级配置-可选" tabindex="-1"><a class="header-anchor" href="#四、高级配置-可选"><span>四、高级配置（可选）</span></a></h3><h4 id="_1-持久化配置" tabindex="-1"><a class="header-anchor" href="#_1-持久化配置"><span>1. <strong>持久化配置</strong></span></a></h4><p>若需容器重启后保留配置，可挂载卷：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">podman</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> socks5-proxy</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1080:1080</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./socks5-config:/etc/socks5</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">  \\ </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 假设镜像支持配置持久化</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  docker.io/serjs/go-socks5-proxy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-开机自启" tabindex="-1"><a class="header-anchor" href="#_2-开机自启"><span>2. <strong>开机自启</strong></span></a></h4><p>通过 <code>systemd</code> 管理容器自启：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">podman</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> generate</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> socks5-proxy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/etc/systemd/system/socks5-proxy.service</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> enable</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --now</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> socks5-proxy.service</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-镜像加速" tabindex="-1"><a class="header-anchor" href="#_3-镜像加速"><span>3. <strong>镜像加速</strong></span></a></h4><p>编辑 <code>/etc/containers/registries.conf</code> 添加国内镜像源（如阿里云、网易）以加速拉取：</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-toml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">registry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mirror</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;mirror.baidubce.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">insecure</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="五、常见问题" tabindex="-1"><a class="header-anchor" href="#五、常见问题"><span>五、常见问题</span></a></h3><ol><li><strong>端口冲突</strong>：若 1080 端口被占用，修改映射端口（如 <code>-p 1081:1080</code>）。</li><li><strong>防火墙放行</strong>：确保主机防火墙允许代理端口（如 <code>sudo ufw allow 1080</code>）。</li><li><strong>Rootless 模式</strong>：普通用户运行需配置用户命名空间：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> usermod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --add-subuids</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 100000-165535</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $USER</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">podman</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --security-opt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> label=disable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ...</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 禁用 SELinux 限制（测试环境）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><p>通过 Podman 部署 <code>go-socks5-proxy</code> 仅需 3 步：安装 Podman → 拉取镜像 → 运行容器。其无守护进程架构比 Docker 更轻量，适合资源受限环境。若需企业级扩展，可结合 <code>podman-compose</code> 管理多容器服务。</p>`,54)])])}const k=i(h,[["render",l]]),p=JSON.parse('{"path":"/tld/net/socks5.html","title":"SOCKS5 服务器","lang":"zh-CN","frontmatter":{"description":"SOCKS5 服务器 方案一、 Microsocks https://github.com/rofl0r/microsocks 所有参数都是可选的。默认情况下，listenip 为 0.0.0.0，端口为 1080。 选项 -q 禁用日志记录。 选项 -b 指定传出连接绑定到哪个 ip 选项 -w 允许指定以逗号分隔的 IP 地址白名单，这些 IP 地...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SOCKS5 服务器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-09T12:08:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SecCMD\\",\\"url\\":\\"https://www.seccmd.net\\"}]}"],["meta",{"property":"og:url","content":"https://www.seccmd.net/tld/net/socks5.html"}],["meta",{"property":"og:site_name","content":"明剑实验室"}],["meta",{"property":"og:title","content":"SOCKS5 服务器"}],["meta",{"property":"og:description","content":"SOCKS5 服务器 方案一、 Microsocks https://github.com/rofl0r/microsocks 所有参数都是可选的。默认情况下，listenip 为 0.0.0.0，端口为 1080。 选项 -q 禁用日志记录。 选项 -b 指定传出连接绑定到哪个 ip 选项 -w 允许指定以逗号分隔的 IP 地址白名单，这些 IP 地..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-09T12:08:14.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-09T12:08:14.000Z"}]]},"git":{"createdTime":1757419694000,"updatedTime":1757419694000,"contributors":[{"name":"fireadm","username":"fireadm","email":"iwanwu@hotmail.com","commits":1,"url":"https://github.com/fireadm"}]},"readingTime":{"minutes":3.03,"words":910},"filePathRelative":"tld/net/socks5.md","autoDesc":true}');export{k as comp,p as data};
