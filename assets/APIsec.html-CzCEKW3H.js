import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,f as a,o as e}from"./app-RxjUGUit.js";const l={};function p(t,s){return e(),i("div",null,[...s[0]||(s[0]=[a(`<h1 id="api安全" tabindex="-1"><a class="header-anchor" href="#api安全"><span>API安全</span></a></h1><h2 id="技术方案" tabindex="-1"><a class="header-anchor" href="#技术方案"><span>技术方案</span></a></h2><p>API防护的最佳实践（From Gartner) <a href="https://www.freebuf.com/news/306073.html" target="_blank" rel="noopener noreferrer">https://www.freebuf.com/news/306073.html</a></p><p><strong>rest sec cheat sheet</strong> <a href="https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html" target="_blank" rel="noopener noreferrer">https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html</a></p><p><strong>owasp api sec</strong> <a href="https://owasp.org/www-project-api-security/" target="_blank" rel="noopener noreferrer">https://owasp.org/www-project-api-security/</a></p><p>阿里云 <a href="https://help.aliyun.com/document_detail/164802.html" target="_blank" rel="noopener noreferrer">https://help.aliyun.com/document_detail/164802.html</a></p><p>caofanqi <a href="https://github.com/caofanqi/study-security/tree/master/doc" target="_blank" rel="noopener noreferrer">https://github.com/caofanqi/study-security/tree/master/doc</a></p><p><strong>Redhat</strong></p><p>API 安全防护 <a href="https://www.redhat.com/zh/topics/security/api-security" target="_blank" rel="noopener noreferrer">https://www.redhat.com/zh/topics/security/api-security</a></p><p>了解 IT 安全防护 <a href="https://www.redhat.com/zh/topics/security" target="_blank" rel="noopener noreferrer">https://www.redhat.com/zh/topics/security</a></p><p>什么是 API <a href="https://www.redhat.com/zh/topics/api" target="_blank" rel="noopener noreferrer">https://www.redhat.com/zh/topics/api</a></p><p>什么是零信任？<br><a href="https://www.redhat.com/zh/topics/security/what-is-zero-trust" target="_blank" rel="noopener noreferrer">https://www.redhat.com/zh/topics/security/what-is-zero-trust</a></p><p>API 网关能做什么？ <a href="https://www.redhat.com/zh/topics/api/what-does-an-api-gateway-do" target="_blank" rel="noopener noreferrer">https://www.redhat.com/zh/topics/api/what-does-an-api-gateway-do</a></p><p>红帽的混合云安全防护心法 <a href="https://www.redhat.com/zh/topics/security/hybrid-cloud-security-approach" target="_blank" rel="noopener noreferrer">https://www.redhat.com/zh/topics/security/hybrid-cloud-security-approach</a></p><p>红帽 3scale API 管理 <a href="https://www.redhat.com/zh/technologies/jboss-middleware/3scale" target="_blank" rel="noopener noreferrer">https://www.redhat.com/zh/technologies/jboss-middleware/3scale</a></p><p>红帽 OpenShift API 管理 <a href="https://www.redhat.com/zh/technologies/cloud-computing/openshift/openshift-api-management" target="_blank" rel="noopener noreferrer">https://www.redhat.com/zh/technologies/cloud-computing/openshift/openshift-api-management</a></p><h2 id="开放式api安全防护的七大原则" tabindex="-1"><a class="header-anchor" href="#开放式api安全防护的七大原则"><span>开放式API安全防护的七大原则</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>开放式API安全防护的七大原则</span></span>
<span class="line"><span></span></span>
<span class="line"><span>在我们日常工作程序开发过程中，难免会涉及与第三方系统进行数据的交互与传递，那么如何保证数据在传输过程中的安全呢（即防窃取）？</span></span>
<span class="line"><span></span></span>
<span class="line"><span>API 是模块或者子系统之间交互的接口定义，优秀的系统架构离不开好良好的 API 设计，而一个设计不够完善的 API 则注定会导致系统的后续发展和维护非常困难。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>下面我们就来讨论下常用的一些API设计的安全方法。</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>一、API服务为什么要签名？</span></span>
<span class="line"><span></span></span>
<span class="line"><span>首先要明确，接口服务需要解决的三个问题：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>请求是否合法：是否是我的信任方</span></span>
<span class="line"><span></span></span>
<span class="line"><span>请求是否被篡改：是否被第三方劫持并篡改参数</span></span>
<span class="line"><span></span></span>
<span class="line"><span>防止重复请求（防重放）：是否重复请求</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>二、服务调用流程</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1. 接口调用方(客户端)向接口提供方(服务器)申请接口调用账号，申请成功后，接口提供方会给接口调用方一个appId和一个key参数；</span></span>
<span class="line"><span>2. 客户端携带参数appId、timestamp、sign去调用服务器端的API token，其中sign=加密(appId + timestamp + key)；</span></span>
<span class="line"><span>3. 客户端拿着api_token 去访问不需要登录就能访问的接口；</span></span>
<span class="line"><span>4. 当访问用户需要登录的接口时，客户端跳转到登录页面，通过用户名和密码调用登录接口，登录接口会返回一个usertoken, 客户端拿着usertoken 去访问需要登录才能访问的接口；</span></span>
<span class="line"><span>5. sign的作用是防止参数被篡改，客户端调用服务端时需要传递sign参数，服务器响应客户端时也可以返回一个sign用于客户端校验返回的值是否被非法篡改了。客户端传的sign和服务器端响应的sign算法可能会不同。</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>三、必要参数介绍</span></span>
<span class="line"><span></span></span>
<span class="line"><span>一般 token、timestamp 和 sign 三个参数会在接口中会同时作为参数传递，每个参数都有各自的用途。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3.1 token</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Token：访问令牌access token, 用于接口中, 用于标识接口调用者的身份、凭证，减少用户名和密码的传输次数。一般情况下客户端(接口调用方)需要先向服务器端申请一个接口调用的账号，服务器会给出一个appId和一个key, key用于参数签名使用，注意key保存到客户端，需要做一些安全处理，防止泄露。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Token的值一般是UUID，服务端生成Token后需要将token作为key，将一些和token关联的信息作为value保存到缓存服务器中(redis)，当一个请求过来后，服务器就去缓存服务器中查询这个Token是否存在，存在则调用接口，不存在返回接口错误，一般通过拦截器或者过滤器来实现，Token分为两种：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>API Token(接口令牌): 用于访问不需要用户登录的接口，如登录、注册、一些基本数据的获取等。获取接口令牌需要拿appId、timestamp和sign来换，sign=加密(timestamp+key)；</span></span>
<span class="line"><span></span></span>
<span class="line"><span>USER Token(用户令牌): 用于访问需要用户登录之后的接口，如：获取我的基本信息、保存、修改、删除等操作。获取用户令牌需要拿用户名和密码来换。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>关于Token的时效性：token可以是一次性的、也可以在一段时间范围内是有效的，具体使用哪种看业务需要。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3.2 timestamp</span></span>
<span class="line"><span></span></span>
<span class="line"><span>timestamp: 时间戳，是客户端调用接口时对应的当前时间戳，时间戳用于防止DoS攻击。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>当黑客劫持了请求的url去DoS攻击，每次调用接口时接口都会判断服务器当前系统时间和接口中传递的timestamp的差值，如果这个差值超过某个设置的时间(假如5分钟)，那么这个请求将被拦截掉，如果在设置的超时时间范围内，是不能阻止DoS攻击的。timestamp机制只能减轻DoS攻击的时间，缩短攻击时间。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>DoS</span></span>
<span class="line"><span></span></span>
<span class="line"><span>DoS是Denial of Service的简称，即拒绝服务，造成DoS的攻击行为被称为DoS攻击，其目的是使计算机或网络无法提供正常的服务。最常见的DoS攻击有计算机网络带宽攻击和连通性攻击。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>DoS攻击是指故意的攻击网络协议实现的缺陷或直接通过野蛮手段残忍地耗尽被攻击对象的资源，目的是让目标计算机或网络无法提供正常的服务或资源访问，使目标系统服务系统停止响应甚至崩溃，而在此攻击中并不包括侵入目标服务器或目标网络设备。这些服务资源包括网络带宽，文件系统空间容量，开放的进程或者允许的连接。这种攻击会导致资源的匮乏，无论计算机的处理速度多快、内存容量多大、网络带宽的速度多快都无法避免这种攻击带来的后果。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3.3 sign</span></span>
<span class="line"><span></span></span>
<span class="line"><span>nonce：随机值，是客户端随机生成的值，作为参数传递过来，随机值的目的是增加sign签名的多变性。随机值一般是数字和字母的组合，6位长度，随机值的组成和长度没有固定规则。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>sign: 一般用于参数签名，防止参数被非法篡改，最常见的是修改金额等重要敏感参数， sign的值一般是将所有非空参数按照升序排序然后将如下数据：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>token+key+timestamp+nonce(随机数)</span></span>
<span class="line"><span>拼接在一起，然后使用某种加密算法进行加密，作为接口中的一个参数sign来传递，也可以将sign放到请求头中。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>接口在网络传输过程中如果被黑客挟持，并修改其中的参数值，然后再继续调用接口，虽然参数的值被修改了，但是因为黑客不知道sign是如何计算出来的，不知道sign都有哪些值构成，不知道以怎样的顺序拼接在一起的，最重要的是不知道签名字符串中的key是什么，所以黑客可以篡改参数的值，但没法修改sign的值，当服务器调用接口前会按照sign的规则重新计算出sign的值然后和接口传递的sign参数的值做比较，如果相等表示参数值没有被篡改，如果不等，表示参数被非法篡改了，就不执行接口了。</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>四、API安全应用原则</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4.1 使用 HTTPS</span></span>
<span class="line"><span></span></span>
<span class="line"><span>现在的 Web 已经不是之前那个年代，标准的 HTTP 满足不了 Web 安全需求。而各大浏览器供应商开始标记不使用安全层的 URL，你的 API 也可以考虑开始动手做这件事——用 HTTPS。HTTPS 采用传输层安全性协议（TLS）对传输进行加密。这意味着 HTTPS 对客户端和服务器之间的通信进行加密。对 API 而言，HTTPS 意味着从 API 发送的内容是受第三方保护的，但更重要的是这意味着访问凭证是安全的。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4.2 认证</span></span>
<span class="line"><span></span></span>
<span class="line"><span>说到访问凭证，避免意外使用 API 的最直接的方法便是确保正确的身份验证。身份验证决定了你是否可访问 API 及如何访问某个 API，即便是对外开放的免费 API 理论上也应当考虑采用身份验证策略以保证安全性。有了身份认证，你可以限制或删除滥用 API 的使用者，让使用者在需要时重新设置凭证，从而保护他们的安全。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4.3 授权</span></span>
<span class="line"><span></span></span>
<span class="line"><span>起到和身份验证类似作用的是授权。身份验证和授权的区别在于，身份验证关注的是 API 的使用者是谁，而授权关注的是他们能够访问的内容。举个例子，免费计划用户可能被授权只能访问你所有 API 的某个子集。当你想集成诸如社交登录此类 API 时，用户授权可让应用从社交平台读取他们的配置文件数据。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4.4 限流限速</span></span>
<span class="line"><span></span></span>
<span class="line"><span>提到安全，我们不得不提限流限速。当然，如何处理不适当的访问对管理资源也很有用。限流限速是一种限制 API 使用的技术。它不仅在经济上保护资源，但也保证了服务器不会因某次大量的请求而超载。大多数限速的方法都基于时间的：一般会设置一个账单周期来处理 API 总体使用情况，也会用“突发”方法来限制大量涌入的请求。如果你看到 429 HTTP 状态代码，说明你正在被限速。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4.5 验证和净化输入</span></span>
<span class="line"><span></span></span>
<span class="line"><span>要攻击 Web 程序最古老的方式之一是输入，即：我们访问数据的方式可能已经改变，但是验证任意用户输入的需要还没有改变。客户端验证有助于防止错误和改善用户体验，但是 API 还需要在对输入执行操作前验证和净化（sanitize）输入——净化策略为删除请求中的恶意或无效代码。验证确保数据满足资源期望的必要条件，例如：类型、形式，甚至是密码结构等因素。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4.6 数据按需开放</span></span>
<span class="line"><span></span></span>
<span class="line"><span>采用快捷方式将数据模型直接映射到接口是很诱人，但这不仅会产生冗长的响应、增加带宽使用，而且还会暴露用户不需要访问的数据。举个例子：一个 /user 接口要返回用户信息。它可能只要用户的一些基本信息，而不需要用户的密码/权限。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4.7 勿暴露敏感信息</span></span>
<span class="line"><span></span></span>
<span class="line"><span>除了对 API 的输入数据进行净化（sanitize）外，还需要对从中产生的信息进行净化。错误消息对用户了解问题的发生至关重要，但要确保不泄漏任何敏感数据。向终端用户提供 API 内部代码结构的详细信息会为攻击者提供便利，所以一定要确保错误信息的配置不仅能提供足够的信息来帮助用户调试，并提供足够的信息让他们报告问题，但又不足以暴露应用程序的内部工作和敏感数据。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>五、总结</span></span>
<span class="line"><span></span></span>
<span class="line"><span>随着硬件设备，分布式计算能力的不断提升，大数据处理能力的完善，也许现在还算安全的防护措施，在不久将来可就会变得不堪一击，数据安全的攻防势必是一场持久战，道高一尺魔高一丈，只有不断总结与改进，才能极大可能保护我们的核心数据和用户的权益。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>虽然本质上 API 就是拿来用的，但即便某个 API 的使用者全是内部人员，它还是可能会出现安全问题。当然了有些平台也提供 IP 白名单服务，可以进一步防止Open API 被冒用。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>为了解决 API 安全问题，在本文我们列举了一系列 API 的最佳实践，希望能够帮助到你。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="api网关" tabindex="-1"><a class="header-anchor" href="#api网关"><span>API网关</span></a></h1><h2 id="todo" tabindex="-1"><a class="header-anchor" href="#todo"><span>TODO</span></a></h2><h2 id="概念定义" tabindex="-1"><a class="header-anchor" href="#概念定义"><span>概念定义</span></a></h2><p>API网关（API GATEWAY）是什么？有什么作用？ <a href="https://zhuanlan.zhihu.com/p/371986798" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/371986798</a></p><h2 id="技术方案选型" tabindex="-1"><a class="header-anchor" href="#技术方案选型"><span>技术方案选型</span></a></h2><p>开源API网关系统（Kong教程）入门到精通 <a href="https://www.jianshu.com/p/a68e45bcadb6" target="_blank" rel="noopener noreferrer">https://www.jianshu.com/p/a68e45bcadb6</a></p><p>github caofanqi <a href="https://github.com/caofanqi/study-security/tree/master/doc" target="_blank" rel="noopener noreferrer">https://github.com/caofanqi/study-security/tree/master/doc</a></p><p>Kong API网关介绍及选型(kong) <a href="https://blog.csdn.net/pushiqiang/article/details/95726137" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/pushiqiang/article/details/95726137</a></p><p>谈谈微服务中的 API 网关（API Gateway）<a href="https://www.cnblogs.com/savorboard/p/api-gateway.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/savorboard/p/api-gateway.html</a></p><ul><li>我一直在寻思一种最佳的 API 网关的落地方案，以上两种 API 网关有什么问题呢？ 通常情况下， API 网关要做很多工作，它作为一个系统的后端总入口，承载着所有服务的组合路由转换等工作，除此之外，</li><li>我们一般也会把安全，限流，缓存，日志，监控，重试，熔断等放到 API 网关来做，那么可以试想在高并发的情况下，这里可能会出现一个性能瓶颈。</li></ul><p>API网关选型<br> 私有云开源解决方案：<br> Netflix Zuul，zuul是spring cloud的一个推荐组件，<a href="https://github.com/Netflix/zuul" target="_blank" rel="noopener noreferrer">https://github.com/Netflix/zuul</a><br> Kong kong是基于Nginx+Lua进行二次开发的方案， <a href="https://konghq.com/" target="_blank" rel="noopener noreferrer">https://konghq.com/</a><br> Tyk是2014年创建的开源API网关，甚至比AWS的API网关即服务功能还要早。Tyk用Golang编写并使用Golang自己的HTTP服务器。</p><p>公有云解决方案：<br> Amazon API Gateway，<a href="https://aws.amazon.com/cn/api-gateway/" target="_blank" rel="noopener noreferrer">https://aws.amazon.com/cn/api-gateway/</a><br> 阿里云API网关，<a href="https://www.aliyun.com/product/apigateway/" target="_blank" rel="noopener noreferrer">https://www.aliyun.com/product/apigateway/</a><br> 腾讯云API网关， <a href="https://cloud.tencent.com/product/apigateway" target="_blank" rel="noopener noreferrer">https://cloud.tencent.com/product/apigateway</a></p><p>自开发解决方案<br> 基于Nginx+Lua+ OpenResty的方案，可以看到Kong,orange都是基于这个方案<br> 基于Netty、非阻塞IO模型。 通过网上搜索可以看到国内的宜人贷等一些公司是基于这种方案，是一种成熟的方案。<br> 基于Node.js的方案。 这种方案是应用了Node.js天生的非阻塞的特性。<br> 基于java Servlet的方案。 zuul基于的就是这种方案，这种方案的效率不高，这也是zuul总是被诟病的原因。</p><h2 id="api工具" tabindex="-1"><a class="header-anchor" href="#api工具"><span><strong>API工具</strong></span></a></h2><p><a href="http://Httpbin.org" target="_blank" rel="noopener noreferrer">Httpbin.org</a><br> 请求不同接口，返回不同内容，用于观察客户端情况。</p><p><a href="http://Mockbin.com" target="_blank" rel="noopener noreferrer">Mockbin.com</a><br> 自动生成多语言的请求，和临时服务端。</p><p><a href="http://Apipost.cn" target="_blank" rel="noopener noreferrer">Apipost.cn</a><br> Apipost = Postman + Swagger + Mock + Jmeter<br> API调试功能，使用浏览器可以直接发包测试，使用非常方便，保持请求记录。</p><p>参考：<br> 13个用于API设计、开发和测试的免费工具 <a href="https://zhuanlan.zhihu.com/p/99494947" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/99494947</a></p><h2 id="openapi" tabindex="-1"><a class="header-anchor" href="#openapi"><span>OpenAPI</span></a></h2><p><a href="https://zhuanlan.zhihu.com/p/382164927" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/382164927</a></p><p>OpenAPI 规范 (中文版)<br><a href="https://openapi.apifox.cn/#schema-%E5%AF%B9%E8%B1%A1" target="_blank" rel="noopener noreferrer">https://openapi.apifox.cn/#schema-对象</a></p><p>OpenAPI 的授权与认证——swagger2.0的使用<br><a href="https://blog.csdn.net/weixin_34318956/article/details/91458809" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/weixin_34318956/article/details/91458809</a></p><p><a href="https://www.apifox.cn/?utm_source=Sogou_sem" target="_blank" rel="noopener noreferrer">https://www.apifox.cn/?utm_source=Sogou_sem</a></p><p>openapi 好文档<br><a href="https://swagger.io/docs/specification/authentication/" target="_blank" rel="noopener noreferrer">https://swagger.io/docs/specification/authentication/</a></p><h2 id="opa" tabindex="-1"><a class="header-anchor" href="#opa"><span>OPA</span></a></h2><p>APISIX + Open Policy Agent</p><h1 id="apisix" tabindex="-1"><a class="header-anchor" href="#apisix"><span>APISIX</span></a></h1><h2 id="入门文章" tabindex="-1"><a class="header-anchor" href="#入门文章"><span>入门文章</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>模拟这篇文章，体验使用。</span></span>
<span class="line"><span></span></span>
<span class="line"><span># ubuntu 20.04安装 Apache APISIX </span></span>
<span class="line"><span>https://www.cnblogs.com/wangguishe/p/16165880.html</span></span>
<span class="line"><span></span></span>
<span class="line"><span>发布 API https://apisix.apache.org/zh/docs/apisix/tutorials/expose-api/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 如何使用 APISIX 进行集中式身份认证 </span></span>
<span class="line"><span>https://apisix.apache.org/zh/blog/2021/09/07/how-to-use-apisix-auth/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 网关系统 apisix/kong 日志收集方案实施对比 </span></span>
<span class="line"><span>https://www.cnblogs.com/zihunqingxin/p/15674011.html</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 发现一个很棒的 单点登录、权限管理的开源方案</span></span>
<span class="line"><span>https://casbin.cn/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="初始安装脚本" tabindex="-1"><a class="header-anchor" href="#初始安装脚本"><span>初始安装脚本</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">参考：https://www.cnblogs.com/wangguishe/p/16165880.html</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#### 1.安装 etcd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -xvf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> etcd-v3.5.3-linux-amd64.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> etcd-v3.5.3-linux-amd64</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> etcd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> etcdctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nohup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> etcd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/tmp/etcd.log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 2&gt;&amp;1 &amp;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">etcd</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">etcdctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> put</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mingming</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">etcdctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#### 2. 安装apisix 网关</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://raw.githubusercontent.com/apache/apisix/master/utils/install-dependencies.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://downloads.apache.org/apisix/2.15.0/apache-apisix-2.15.0-src.tgz</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apisix-2.15.0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zxvf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apache-apisix-2.15.0-src.tgz</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apisix-2.15.0</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apisix-2.15.0</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">LUAROCKS_SERVER</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">https://luarocks.cn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deps</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置代理版本，因为需要github下载很多组件。</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># LUAROCKS_SERVER=https://luarocks.cn proxychains make deps</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -rf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apisix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/apisix/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cp</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  -rf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deps</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/apisix/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#### 3.初始化</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">初始化依赖</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">apisix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">API访问测试</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://127.0.0.1:9080/apisix/admin/routes?api_key=edd1c9f034335f136f87ad84b625c8f1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#### 参考</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/security/limits.conf</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">* soft nofile 65536</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">* hard nofile 65536</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="api操作" tabindex="-1"><a class="header-anchor" href="#api操作"><span>API操作</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">API</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Key</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/apisix/conf/config.yaml</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> edd1c9f034335f136f87ad84b625c8f1</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://127.0.0.1:9080/apisix/admin/routes?api_key=edd1c9f034335f136f87ad84b625c8f1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 公开你的服务</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">https://apisix.apache.org/zh/docs/apisix/tutorials/expose-api/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.创建上游</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;http://127.0.0.1:9080/apisix/admin/upstreams/1&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-H </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;X-API-KEY: edd1c9f034335f136f87ad84b625c8f1&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -X</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PUT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;type&quot;: &quot;roundrobin&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;nodes&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;httpbin.org:80&quot;: 1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2.创建路由</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;http://127.0.0.1:9080/apisix/admin/routes/1&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-H </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;X-API-KEY: edd1c9f034335f136f87ad84b625c8f1&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -X</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PUT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;methods&quot;: [&quot;GET&quot;],</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;host&quot;: &quot;example.com&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;uri&quot;: &quot;/anything/*&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;upstream_id&quot;: &quot;1&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}&#39;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 请求</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -X</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> GET</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;http://127.0.0.1:9080/anything/get?foo1=bar1&amp;foo2=bar2&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -H</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Host: example.com&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 身份认证的玩法</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">https://apisix.apache.org/zh/blog/2021/09/07/how-to-use-apisix-auth/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.身份认知插件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;http://127.0.0.1:9080/apisix/admin/routes/1&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-H </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;X-API-KEY: edd1c9f034335f136f87ad84b625c8f1&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -X</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PUT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;methods&quot;: [&quot;GET&quot;],</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;uri&quot;: &quot;/*&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;plugins&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;basic-auth&quot;:{}</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  },</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;upstream&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;type&quot;: &quot;roundrobin&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;nodes&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	  &quot;https://httpbin.org&quot;: 1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	},</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;pass_host&quot;: &quot;pass&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2.配置身份信息</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;http://127.0.0.1:9080/apisix/admin/consumers&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-H </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;X-API-KEY: edd1c9f034335f136f87ad84b625c8f1&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -X</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PUT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;username&quot;: &quot;foo&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;plugins&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;basic-auth&quot;:{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	  &quot;username&quot;: &quot;foo&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	  &quot;password&quot;: &quot;bar&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	}</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3.携带认证信息进行访问​</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ufoo:bar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://127.0.0.1:9080/get</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 配置 Authing OIDC</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;http://127.0.0.1:9080/apisix/admin/routes/1&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-H </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;X-API-KEY: edd1c9f034335f136f87ad84b625c8f1&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -X</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PUT</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;uri&quot;: &quot;/*&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;plugins&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;openid-connect&quot;:{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	  &quot;client_id&quot;: &quot;6359f9224dc93e2c19f6a0ea&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	  &quot;client_secret&quot;: &quot;8c977e7bad348447d02f72484fb1c1f3&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	  &quot;discovery&quot;: &quot;https://api6.authing.cn/oidc/.well-known/openid-configuration&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	  &quot;scope&quot;: &quot;openid profile&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	  &quot;bearer_only&quot;: false,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	  &quot;realm&quot;: &quot;master&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	  &quot;introspection_endpoint_auth_method&quot;: &quot;client_secret_post&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	  &quot;redirect_uri&quot;: &quot;http://47.242.232.158:9080/test&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	},</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;http-logger&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">		&quot;uri&quot;: &quot;http://mockbin.org/bin/49b5a098-572c-4f4b-92ad-f9816e58b288&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	}</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  },</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;upstream&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;type&quot;: &quot;roundrobin&quot;,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;nodes&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	  &quot;httpbin.org&quot;: 1</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	}</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,51)])])}const d=n(l,[["render",p]]),c=JSON.parse('{"path":"/tld/sec/APIsec.html","title":"API安全","lang":"zh-CN","frontmatter":{"description":"API安全 技术方案 API防护的最佳实践（From Gartner) https://www.freebuf.com/news/306073.html rest sec cheat sheet https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html o...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"API安全\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-10T14:21:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SecCMD\\",\\"url\\":\\"https://www.seccmd.net\\"}]}"],["meta",{"property":"og:url","content":"https://www.seccmd.net/tld/sec/APIsec.html"}],["meta",{"property":"og:site_name","content":"明剑实验室"}],["meta",{"property":"og:title","content":"API安全"}],["meta",{"property":"og:description","content":"API安全 技术方案 API防护的最佳实践（From Gartner) https://www.freebuf.com/news/306073.html rest sec cheat sheet https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html o..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-10T14:21:13.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-10T14:21:13.000Z"}]]},"git":{"createdTime":1757419694000,"updatedTime":1757514073000,"contributors":[{"name":"fireadm","username":"fireadm","email":"iwanwu@hotmail.com","commits":2,"url":"https://github.com/fireadm"}]},"readingTime":{"minutes":13.94,"words":4183},"filePathRelative":"tld/sec/APIsec.md","autoDesc":true}');export{d as comp,c as data};
