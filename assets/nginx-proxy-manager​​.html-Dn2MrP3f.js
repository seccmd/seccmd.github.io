import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,f as a,o as e}from"./app-DJcKxtyA.js";const l={};function r(t,s){return e(),i("div",null,[...s[0]||(s[0]=[a(`<h1 id="nginx-proxy-manager​​-管理面" tabindex="-1"><a class="header-anchor" href="#nginx-proxy-manager​​-管理面"><span>Nginx Proxy Manager​​ 管理面</span></a></h1><h3 id="图形化管理面板推荐" tabindex="-1"><a class="header-anchor" href="#图形化管理面板推荐"><span><strong>图形化管理面板推荐</strong></span></a></h3><p>首选Nginx Proxy Manager：如果核心需求是代理和SSL，它提供最简洁的解决方案，15分钟即可通过Docker完成部署。</p><p>次选宝塔面板：适合需要兼顾网站管理、FTP等复杂场景，但注意其资源占用较高。</p><h2 id="nginx-proxy-manager​​-推荐" tabindex="-1"><a class="header-anchor" href="#nginx-proxy-manager​​-推荐"><span>Nginx Proxy Manager​​ (推荐)</span></a></h2><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-markdown"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">轻量级Docker化部署，专为反向代理和SSL设计</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">直观的Web界面，支持多域名、HTTP/HTTPS重定向</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">​​内置Let&#39;s Encrypt自动化​​，一键申请/续签证书</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">支持访问控制、Basic Auth等基础功能</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">​​适用场景​​：个人开发者或中小团队，需要快速管理代理和SSL。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">​​项目地址​​：https://nginxproxymanager.com/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 快速入门命令（Nginx Proxy Manager）​</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 通过Docker一键部署</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker run -d \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -p 80:80 -p 81:81 -p 443:443 \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -v data:/data \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  -v letsencrypt:/etc/letsencrypt \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  --name nginx-proxy-manager \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  jc21/nginx-proxy-manager:latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cd C:\\Users\\iwanw\\Videos\\CWork\\codebase\\ailab\\nginx-proxy-manager</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker run -d -p 80:80 -p 81:81 -p 443:443 -v data:/data  -v letsencrypt:/etc/letsencrypt --name nginx-proxy-manager jc21/nginx-proxy-manager:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="guide" tabindex="-1"><a class="header-anchor" href="#guide"><span>Guide -</span></a></h2><p><a href="https://nginxproxymanager.com/guide/" target="_blank" rel="noopener noreferrer">https://nginxproxymanager.com/guide/</a></p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-markdown"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 1. Install Docker and Docker-Compose</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Docker Install documentation: https://docs.docker.com/get-docker/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Docker-Compose Install documentation: https://docs.docker.com/compose/install/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 2. Create a docker-compose.yml file similar to this:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">services:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  app:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    image: &#39;jc21/nginx-proxy-manager:latest&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    restart: unless-stopped</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ports:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - &#39;80:80&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - &#39;81:81&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - &#39;443:443&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    volumes:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - ./data:/data</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - ./letsencrypt:/etc/letsencrypt</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 3. Bring up your stack by running</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker-compose up -d</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># If using docker-compose-plugin</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker compose up -d</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 4. Log in to the Admin UI</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># When your docker container is running, connect to it on port 81 for the admin interface. Sometimes this can take a little bit because of the entropy of keys.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">http://127.0.0.1:81</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># Default Admin User:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Email:    admin@example.com</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Password: changeme</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># Immediately after logging in with this default user you will be asked to modify your details and change your password.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)])])}const c=n(l,[["render",r]]),h=JSON.parse('{"path":"/tld/dev/nginx-proxy-manager%E2%80%8B%E2%80%8B.html","title":"Nginx Proxy Manager​​ 管理面","lang":"zh-CN","frontmatter":{"description":"Nginx Proxy Manager​​ 管理面 图形化管理面板推荐 首选Nginx Proxy Manager：如果核心需求是代理和SSL，它提供最简洁的解决方案，15分钟即可通过Docker完成部署。 次选宝塔面板：适合需要兼顾网站管理、FTP等复杂场景，但注意其资源占用较高。 Nginx Proxy Manager​​ (推荐) Guide -...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Nginx Proxy Manager​​ 管理面\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-09T12:08:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SecCMD\\",\\"url\\":\\"https://www.seccmd.net\\"}]}"],["meta",{"property":"og:url","content":"https://www.seccmd.net/tld/dev/nginx-proxy-manager%E2%80%8B%E2%80%8B.html"}],["meta",{"property":"og:site_name","content":"明剑实验室"}],["meta",{"property":"og:title","content":"Nginx Proxy Manager​​ 管理面"}],["meta",{"property":"og:description","content":"Nginx Proxy Manager​​ 管理面 图形化管理面板推荐 首选Nginx Proxy Manager：如果核心需求是代理和SSL，它提供最简洁的解决方案，15分钟即可通过Docker完成部署。 次选宝塔面板：适合需要兼顾网站管理、FTP等复杂场景，但注意其资源占用较高。 Nginx Proxy Manager​​ (推荐) Guide -..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-09T12:08:14.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-09T12:08:14.000Z"}]]},"git":{"createdTime":1757419694000,"updatedTime":1757419694000,"contributors":[{"name":"fireadm","username":"fireadm","email":"iwanwu@hotmail.com","commits":1,"url":"https://github.com/fireadm"}]},"readingTime":{"minutes":1.35,"words":404},"filePathRelative":"tld/dev/nginx-proxy-manager​​.md","autoDesc":true}');export{c as comp,h as data};
