import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,f as i,o as e}from"./app-CaxYOVkH.js";const p={};function t(l,s){return e(),n("div",null,[...s[0]||(s[0]=[i(`<h1 id="ai-mcp" tabindex="-1"><a class="header-anchor" href="#ai-mcp"><span>AI MCP</span></a></h1><h2 id="automate" tabindex="-1"><a class="header-anchor" href="#automate"><span>autoMate</span></a></h2><p>无代码自动化神器，让电脑任务“自己动起来”</p><p>GitHub 仓库地址：<a href="https://github.com/yuruotong1/autoMate" target="_blank" rel="noopener noreferrer">https://github.com/yuruotong1/autoMate</a></p><h2 id="mcp-playwright" tabindex="-1"><a class="header-anchor" href="#mcp-playwright"><span>MCP-Playwright</span></a></h2><p>MCP-Playwright：AI自动化神器，可执行JS代码进行复杂交互任务！</p><blockquote><p><strong>作者：AI研究生 AI大模型观察站</strong> <a href="https://mp.weixin.qq.com/s?__biz=MzkzMjkwMjk3Mw%3D%3D&amp;mid=2247484597&amp;idx=1&amp;sn=970d78788d087b4c358c08509d9cfd6a" target="_blank" rel="noopener noreferrer"><strong>查看原文</strong></a></p></blockquote><p>最近笔者在用Next.js写一个前端项目项目，半夜 11 点还在手动复制SQL表结构、Google各种JS报错信息。PS：笔者是一个算法+后端工程师，对于前端的框架语法基本上只能靠搜索完成😭。</p><p>AI 编程助手不停地吐出过时的 React Hooks 或者是没理解我意思给出我不想要的代码，这让笔者极近崩溃，甚至想把电脑给砸了！！！！！</p><p>经过过不断AI工具的尝试，最终笔者发现了 MCP 服务器 —— 这些工具从根本上解决了 AI 编码时的上下文错乱、规划混乱和 UI 丑陋的问题（还的是MCP啊，专业的人干专业的事，在此刻具象化了）。</p><p>今天笔者将我用过的7款MCP工具安利给小伙伴们，让大家少走点弯路。</p><p>如果喜欢请关注公众号，以后会不断更新内容，和大家一起学习成长~~~</p><h2 id="_1-context-7-mcp-让你的-ai-永远跟得上最新版文档" tabindex="-1"><a class="header-anchor" href="#_1-context-7-mcp-让你的-ai-永远跟得上最新版文档"><span>1. Context 7 MCP：让你的 AI 永远跟得上最新版文档</span></a></h2><p>有没有遇到过这样的情况？你问 AI 一个新框架的问题，它却给你回复 2019 年的代码。</p><figure><img src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/6Ex6Atic0gTz2sZU3oeM2sqOoLovh7LwgicKgC4aCDvXN0rYdibwnWLY9WDnqDVu005pSseC9SMiaMDpCGDYXjogicA/640?wx_fmt=jpeg&amp;from=appmsg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Context 7 MCP 会连接实时文档，让 AI 拥有“最新知识”。</p><p>比如你要搭建一个 Next.js 应用，想要设置 App Router。如果没有 Context 7，AI 可能会给你老掉牙的 <code>getServerSideProps</code>。但有了它，它会查阅 Next.js 14 的文档，并提供正确代码。</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>// 老派错误用法export async function getServerSideProps(){...}</span></span>
<span class="line"><span>// Context 7 的正确用法exportdefaultfunctionProfile(){returnYourProfile;}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>就像给 AI 打了一针鸡血：速度快、信息准，还节省 token。</p><p>适合：经常使用新框架（如 Next.js、SvelteKit）的开发者。</p><h2 id="_2-supabase-mcp-让你远离手写-sql-的痛苦" tabindex="-1"><a class="header-anchor" href="#_2-supabase-mcp-让你远离手写-sql-的痛苦"><span>2. Supabase MCP：让你远离手写 SQL 的痛苦</span></a></h2><p>写 SQL 或同步 schema 就是一个体力劳动，还容易出错，稍不注意字段名字抄错？类型抄错？字符串长度抄错？在调试的时候才发现问题，到时候整个人都麻了，还要回过头全部检查转换的对不对，非常浪费时间！</p><figure><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/6Ex6Atic0gTz2sZU3oeM2sqOoLovh7LwgFd99ibJ6SmXwMibpKOl6z1dvWhOdiclwwP0LHhryo9Y6LFBmYPnAicyMjQ/640?wx_fmt=png&amp;from=appmsg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Supabase MCP 可以把你的 IDE（比如 Cursor）连接到 Supabase 数据库，允许你用自然语言控制它。</p><p>比如你可以说：</p><p>•“创建一个包含 name 和 email 的 users 表”•“给 posts 表添加 RLS（行级安全）”</p><p>它会自动拉取 schema、执行修改，还能保持同步。</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>--老方法（痛苦）CREATE TABLE users (  id UUID PRIMARY KEY,  email TEXT NOT NULL,  name TEXT);</span></span>
<span class="line"><span>--Supabase MCP：你说“创建 users 表”，它自动生成 SQL</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>简直就像有个数据库精灵。</p><p>适合：不想再为 SQL 烦心的后端开发者。</p><h2 id="_3-browser-mcp-让你的-ide-内置搜索引擎" tabindex="-1"><a class="header-anchor" href="#_3-browser-mcp-让你的-ide-内置搜索引擎"><span>3. Browser MCP：让你的 IDE 内置搜索引擎</span></a></h2><p>调试的时候在浏览器里开 47 个标签页？太常见了。</p><p>Browser MCP 让 AI 在 IDE 里“浏览网页”！</p><p>你遇到一个奇怪的报错？告诉它搜索日志信息。</p><p>需要最新的 Stripe API 文档？它会帮你搜索并总结。</p><figure><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/6Ex6Atic0gTz2sZU3oeM2sqOoLovh7Lwg1soSBvNUD2sWCSP0hI30EKuPGaib7lne2wVMQia5CVWSm8HUZYccYCCw/640?wx_fmt=png&amp;from=appmsg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>举个例子：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>// 报错：ReferenceError: fetch is not defined你问 AI：“为啥Node.js 的 fetch 会出错？”Browser MCP 查完后告诉你：“Node.js 需要手动引入 fetch，试试这段代码：”import fetch from&#39;node-fetch&#39;;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>就像拥有了一个永不休息的研究助手。</p><p>适合：需要调试和查文档的开发者。</p><h2 id="_4-claude-taskmaster-你的私人项目经理" tabindex="-1"><a class="header-anchor" href="#_4-claude-taskmaster-你的私人项目经理"><span>4. Claude Taskmaster：你的私人项目经理</span></a></h2><p>你有一个超棒的 App 想法，但不知道从哪开始？</p><figure><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/6Ex6Atic0gTz2sZU3oeM2sqOoLovh7LwgagBtzvQPmAtrw66rsAjXC69tP56Vj4iahPcHFMr1WDwbGcaicndmO4jw/640?wx_fmt=png&amp;from=appmsg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Claude Taskmaster 可以把你的“想法垃圾堆”变成一个清晰的执行计划。</p><p>比如我说：“做一个带登录和暗黑模式的 todo 应用”，它会返回一个有逻辑的任务列表：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>1.登录功能：接入Supabase登录，搭个简单界面2.Todo功能：创建数据库表，编写 CRUD 接口3.深色模式：添加主题切换功能，保存用户设置</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>就像有个产品经理一样，而且不会在晚上 9 点给你发 Slack 消息。</p><p>适合：身兼数职的个人开发者。</p><h2 id="_5-exa-mcp-杜绝-ai-胡说八道" tabindex="-1"><a class="header-anchor" href="#_5-exa-mcp-杜绝-ai-胡说八道"><span>5. Exa MCP：杜绝 AI 胡说八道</span></a></h2><p>AI 最令人抓狂的事就是 —— 它编造事实。</p><p>Exa MCP 会实时联网查询信息，为 AI 提供真实数据。</p><figure><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/6Ex6Atic0gTz2sZU3oeM2sqOoLovh7Lwg90iafM0d9xy5bZibTNAmCoSLpKtr1QdKf68ibCMbvDUSuznoq17iagbJSA/640?wx_fmt=png&amp;from=appmsg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>比如你问：</p><blockquote><p>“Tailwind CSS 每周下载量是多少？”</p></blockquote><p>Exa MCP 会查 npm 或 GitHub，并回答：</p><blockquote><p>“截至 2025 年 5 月，Tailwind CSS 每周下载量为 1000 万。”</p></blockquote><p>它是 AI 的“真相血清”。</p><p>适合：需要查数据、API 或竞品的开发者。</p><h2 id="_6-knowledge-graph-memory-不用重复造轮子" tabindex="-1"><a class="header-anchor" href="#_6-knowledge-graph-memory-不用重复造轮子"><span>6. Knowledge Graph Memory：不用重复造轮子</span></a></h2><p>又要做深色模式了？为什么不复用？</p><figure><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/6Ex6Atic0gTz2sZU3oeM2sqOoLovh7LwgUKeuibaVqSqlvZmgnaBAL40Cc5MoQLGQwCppDibwcibJw35IxCMVxWKoA/640?wx_fmt=png&amp;from=appmsg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Knowledge Graph Memory 可以保存你项目的核心逻辑，以便在未来项目中复用。</p><p>比如我之前做过一个深色模式，现在只要说“在这个新项目加深色模式”，它就能把之前的逻辑迁移过来。</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>/* 之前的深色样式 */:root {--bg:#fff;--text:#000;}.dark {--bg:#000;--text:#fff;}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>简直就是编程界的时间机器。</p><p>适合：经常做类似项目的开发者。</p><h2 id="_7-magic-mcp-你身边的免费-ui-设计师" tabindex="-1"><a class="header-anchor" href="#_7-magic-mcp-你身边的免费-ui-设计师"><span>7. Magic MCP：你身边的免费 UI 设计师</span></a></h2><p>你写的登录按钮看起来像是用 Word 做的？</p><figure><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/6Ex6Atic0gTz2sZU3oeM2sqOoLovh7Lwg8gss0mxksbATwKLkGuwau1iaIIfseManpmqAFJJQESxib4YxsIibDyTsw/640?wx_fmt=png&amp;from=appmsg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Magic MCP 可以根据你的提示，生成漂亮的 UI 组件。</p><p>比如你说：“做一个现代风格的 Tailwind 登录按钮。”</p><p>它就会生成这样的代码：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>SignIn</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>UI 看起来就像找了个专业设计师做的。</p><p>适合：对设计苦手但想要好看界面的开发者。</p><h2 id="总结-为什么这些-mcp-工具值得尝试" tabindex="-1"><a class="header-anchor" href="#总结-为什么这些-mcp-工具值得尝试"><span>总结：为什么这些 MCP 工具值得尝试？</span></a></h2><p>这些 MCP 工具，解决了使用 AI 编程时最头疼的问题：</p><p>•<strong>上下文错误</strong>：Context 7 MCP、Exa MCP 保证信息新鲜又真实。•<strong>规划混乱</strong>：Claude Taskmaster 自动拆分任务。•<strong>资料缺失</strong>：Browser MCP 秒搜文档。•<strong>界面太丑</strong>：21st Dev Magic 给你“颜值自由”。•<strong>重复造轮子</strong>：Knowledge Graph Memory 让你“写一次用十次”。</p><p>挑 1~2 个工具用上，你就像给自己配了个专业 AI 编程助理。</p><p>效率翻倍、心情加分，开发体验直接起飞 🚀</p><p>具体用法都可以在Github上项目的README中找到，如果有啥问题欢迎留言交流~~~~~~~</p><figure><img src="https://mmbiz.qpic.cn/sz_mmbiz_gif/6Ex6Atic0gTzeibm9CCXcWPWujMu0GVELQr4GKLdtPBEl0L0X8iaQF4oooKwXvpoQewxeJqrjazZ1UP7DuTkHdpVQ/640?wx_fmt=gif&amp;from=appmsg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="开发第一个mcp-server" tabindex="-1"><a class="header-anchor" href="#开发第一个mcp-server"><span>开发第一个MCP Server</span></a></h2><blockquote><p><strong>作者：AI取经路</strong> <a href="https://mp.weixin.qq.com/s?__biz=MzI4MjE1Nzc2MQ%3D%3D&amp;mid=2649038855&amp;idx=1&amp;sn=941028c77cb1632fb52909e76287a6cd" target="_blank" rel="noopener noreferrer"><strong>查看原文</strong></a></p></blockquote><p>本文提供了一个完整的<strong>MCP Server 实现示例</strong>，通过 Python 代码和Cline测试，展示了 MCP 如何用于<strong>增强 AI 应用的能力</strong>，特别是<strong>Tool 能力的集成和调用</strong>。</p><ul><li><ol><li>常见AI应用对MCP Server能力的支持情况</li></ol></li><li><ol start="2"><li>代码实现MCP Server</li></ol></li><li>2.1 配置环境</li><li>2.2 新建MCP Server : hello_mcp_server.py</li><li><ol start="3"><li>使用Cline测试Server</li></ol></li><li>3.1 Cline连接MCP Server的相关源码</li></ul><p>--领取学习资料大礼包，见文末</p><p>在<a href="https://mp.weixin.qq.com/s?__biz=MzI4MjE1Nzc2MQ==&amp;mid=2649038667&amp;idx=1&amp;sn=d1467904da2f8acc62b7bb4838737ed2&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">《一文说清楚让LangChain大佬“开战”的MCP是什么？》</a>中详细的介绍了MCP.</p><p>MCP为连接<strong>AI应用</strong>与数据源提供了一个通用的开放标准，用单一协议取代了碎片化的集成。通过这个机制， 能力小的<strong>AI应用</strong>会变成更强的应用</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybMKLre9NTvIQYlUw1lc0hVWAcQ8icgboib0BaKWWaPpUPEjFOH7S8Oftw/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><p>在整个MCP的架构中，我们的<strong>AI应用</strong>（如Cline）作为MCP Hosts，通过内部的MCP Client去接入不同的MCP Server，从而达到增强能力的目的</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybaTB3Zd25QM2UfyN1Wk3u7pPibZWnwR8FjZqRXicNuHMcD6Fm8yNytKFA/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><p>根据MCP协议，当<strong>AI应用</strong>连接到MCP Server后，能够获取多种能力，比如Tool，Prompts、Resources等</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybUnX88IU5WcdYqLh2rcQnnoPqj8w1IcBfhrTsgiaIPJBpCsYfVFMu6rw/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><p>详细内容见：<a href="https://mp.weixin.qq.com/s?__biz=MzI4MjE1Nzc2MQ==&amp;mid=2649038667&amp;idx=1&amp;sn=d1467904da2f8acc62b7bb4838737ed2&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">一文说清楚让LangChain大佬“开战”的MCP是什么？</a></p><h2 id="_1-常见ai应用对mcp-server能力的支持情况" tabindex="-1"><a class="header-anchor" href="#_1-常见ai应用对mcp-server能力的支持情况"><span>1. 常见AI应用对MCP Server能力的支持情况</span></a></h2><p>目前MCP还在发展过程中，我们可以通过官方看到常见<strong>AI应用</strong>目前可以使用的能力情况。</p><p>应用对于Tool能力的使用，目前是最广泛的：</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybYf4ziaNL3zmIdMEqsUTIIjPBWaUhKUKPa5InAdeQ10StsibuskLzZmKQ/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><h2 id="_2-代码实现mcp-server" tabindex="-1"><a class="header-anchor" href="#_2-代码实现mcp-server"><span>2. 代码实现MCP Server</span></a></h2><p>我们要实现一个简单的server，他将有一个tool，可以通过订单号查询物流信息。</p><p>这个server在整个架构中的位置，就是下图中绿色的块：</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybDPreWrahvLcoTHrEzmNxHQBvgSUibp7sKy1ncVO4qjvH1Y1IX3vlD6w/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><h3 id="_2-1-配置环境" tabindex="-1"><a class="header-anchor" href="#_2-1-配置环境"><span>2.1 配置环境</span></a></h3><p>首先，让我们安装 <code>uv</code> 并设置我们的 Python 项目和环境：</p><p><strong>安装uv工具（windows）</strong></p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>powershell -ExecutionPolicy ByPass -c &quot;irm https://astral.sh/uv/install.ps1 | iex&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>重新开启一个终端，并确认uv已经安装成功</strong></p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>PS G:\\workspace\\idea\\py\\hello-mcp-server&gt; uv version</span></span>
<span class="line"><span>uv 0.6.6 (c1a0bb85e 2025-03-12)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>❝ 在macos/linux环境中安装uv</p></blockquote><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>curl -LsSf https://astral.sh/uv/install.sh | sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>❝ uv是一个用 Rust 编写的极快的 Python 包和项目管理器。 官网：<a href="https://github.com/astral-sh/uv" target="_blank" rel="noopener noreferrer">https://github.com/astral-sh/uv</a></p></blockquote><p><strong>创建项目，初始化环境：</strong></p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>\`# 初始化项目 uv init hello-mcp-server # 创建Python虚拟环境 cd hello-mcp-server uv venv # 激活虚拟环境 .venv\\Scripts\\activate # 安装依赖 uv add mcp[cli]\`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybdRkcicJkPua6OyPLRwb79WcVSibZqCJT0C49DrCHtvo1yfUTACorWd4Q/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><h3 id="_2-2-新建mcp-server-hello-mcp-server-py" tabindex="-1"><a class="header-anchor" href="#_2-2-新建mcp-server-hello-mcp-server-py"><span>2.2  新建MCP Server : <code>hello_mcp_server.py</code></span></a></h3><p>我们新建一个Server，并增加tool来模拟通过订单号查询物流信息的功能</p><h4 id="_2-2-1-定义一个server" tabindex="-1"><a class="header-anchor" href="#_2-2-1-定义一个server"><span>2.2.1 定义一个server</span></a></h4><p>导入包并定义mcp实例</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>&quot;&quot;&quot;</span></span>
<span class="line"><span>pip install mcp[cli]</span></span>
<span class="line"><span>&quot;&quot;&quot;</span></span>
<span class="line"><span>from mcp.server.fastmcp import FastMCP</span></span>
<span class="line"><span>from pydantic import Field</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Initialize FastMCP server</span></span>
<span class="line"><span>mcp = FastMCP(&quot;hello-mcp-server&quot;, log_level=&quot;ERROR&quot;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-2-定义工具" tabindex="-1"><a class="header-anchor" href="#_2-2-2-定义工具"><span>2.2.2 定义工具</span></a></h4><p>通过<code>@mcp.tool()</code>注解，把一个函数注册为Tool</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span># 注册工具的装饰器，可以很方便的把一个函数注册为工具</span></span>
<span class="line"><span>@mcp.tool()</span></span>
<span class="line"><span>asyncdef query_logistics(order_id: str = Field(description=&quot;订单号&quot;)) -&gt; str:</span></span>
<span class="line"><span>    &quot;&quot;&quot;查询物流信息。当用户需要根据订单号查询物流信息时，调用此工具</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    Args:</span></span>
<span class="line"><span>        order_id: 订单号</span></span>
<span class="line"><span>    </span></span>
<span class="line"><span>    Returns:</span></span>
<span class="line"><span>        物流信息的字符串描述</span></span>
<span class="line"><span>    &quot;&quot;&quot;</span></span>
<span class="line"><span>    # 统一的物流信息数据</span></span>
<span class="line"><span>    tracking_info = [</span></span>
<span class="line"><span>        {&quot;time&quot;: &quot;2024-01-20 10:00:00&quot;, &quot;status&quot;: &quot;包裹已揽收&quot;, &quot;location&quot;: &quot;深圳转运中心&quot;},</span></span>
<span class="line"><span>        {&quot;time&quot;: &quot;2024-01-20 15:30:00&quot;, &quot;status&quot;: &quot;运输中&quot;, &quot;location&quot;: &quot;深圳市&quot;},</span></span>
<span class="line"><span>        {&quot;time&quot;: &quot;2024-01-21 09:00:00&quot;, &quot;status&quot;: &quot;到达目的地&quot;, &quot;location&quot;: &quot;北京市&quot;},</span></span>
<span class="line"><span>        {&quot;time&quot;: &quot;2024-01-21 14:00:00&quot;, &quot;status&quot;: &quot;派送中&quot;, &quot;location&quot;: &quot;北京市朝阳区&quot;},</span></span>
<span class="line"><span>        {&quot;time&quot;: &quot;2024-01-21 16:30:00&quot;, &quot;status&quot;: &quot;已签收&quot;, &quot;location&quot;: &quot;北京市朝阳区三里屯&quot;}</span></span>
<span class="line"><span>    ]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    # 格式化物流信息</span></span>
<span class="line"><span>    result = f&quot;物流单号：{order_id}\\n\\n物流轨迹：\\n&quot;</span></span>
<span class="line"><span>    for item in tracking_info:</span></span>
<span class="line"><span>        result += f&quot;[{item[&#39;time&#39;]}] {item[&#39;status&#39;]} - {item[&#39;location&#39;]}\\n&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    return result</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-3-使用-mcp-inspector-进行测试" tabindex="-1"><a class="header-anchor" href="#_2-2-3-使用-mcp-inspector-进行测试"><span>2.2.3 使用 MCP Inspector 进行测试</span></a></h4><p>MCP Inspector 是一个用于测试和调试 MCP 服务器的交互式开发工具。</p><p><a href="https://modelcontextprotocol.io/docs/tools/inspector" target="_blank" rel="noopener noreferrer">https://modelcontextprotocol.io/docs/tools/inspector</a></p><p><strong>启动MCP Inspector：</strong></p><p>执行命令：<code>mcp dev hello_mcp_server.py</code></p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>(hello-mcp-server) PS G:\\workspace\\idea\\py\\hello-mcp-server&gt; mcp dev hello_mcp_server.py</span></span>
<span class="line"><span>Starting MCP inspector...</span></span>
<span class="line"><span>Proxy server listening on port 3000</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔍 MCP Inspector is up and running at http://localhost:5173 🚀</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过浏览器打开<a href="http://localhost:5173" target="_blank" rel="noopener noreferrer">http://localhost:5173</a></p><p><strong>连接MCP Server:</strong></p><p>点击“Connect”启动MCP Server并建立连接</p><p>1.使用标准输入输出作为传输层</p><p>2.使用命令是uv</p><p>3.uv命令的参数</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybCVSGnxEmYrcbUpGQerNPjvicP1rbXdZJK6XHR8DQhjAPl5N40ev0GgQ/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><p><strong>查询所有的Tool：</strong></p><p>1.点击“Tools”能力标签</p><p>2.点击“List Tools”，查询server中所有的tool（调用了协议的<code>tools/list</code> 端点）</p><p>3.显示出所有的tool</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybLJVvZxcgMG4iaM6TDZXaTpEByFSFTOdSStlHJJL7IcNdId8xJx246iaQ/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><p><strong>执行Tool：</strong></p><p>1.选择需要测试的tool</p><p>2.输入入参：ORDER-123456，点击“Run Tool”（调用了协议的<code>tools/call</code> 端点）</p><p>3.Tool成功返回结果</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybib5fgzBlWxxtTjwDbZRqKnPD1G4TAo4JrHHyTylRnehokfKBrmwC8AQ/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><h2 id="_3-使用cline测试server" tabindex="-1"><a class="header-anchor" href="#_3-使用cline测试server"><span>3. 使用Cline测试Server</span></a></h2><p>打开Cline，点击上边的“MCP Server”</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybQ42ugOBC7WCIwrAOq9e7e1uIRe1CGeibKY3icicDtvJHCC5KNspHThq2A/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><p>选择“Installed”</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybicdYZEsViaibPxIDR14Nt7v4MBKsFxzGQQyfa8ibstnd1kmY6xnu0IDslA/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><p>点击“Configure MCP Servers”</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybMibxs7r0pw2xX6KpvBCQXhxIibibMHdOk7uYB2Cib11iaFyYoR8sxsNZJjw/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><p>右边会弹出配置文件</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybMmjEypWIG2d5Lf8MMm8Fyr0rDgctZM2FO1icCyiafsvFqfyPUUEEFFgg/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><p>将自己刚写的服务器相关配置填进去，保存</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>&quot;hello-mcp-server&quot;: {</span></span>
<span class="line"><span>&quot;name&quot;: &quot;第一个MCP服务&quot;,</span></span>
<span class="line"><span>&quot;key&quot;: &quot;hello-mcp-server&quot;,</span></span>
<span class="line"><span>&quot;command&quot;: &quot;uv&quot;,       </span></span>
<span class="line"><span>&quot;args&quot;: [</span></span>
<span class="line"><span>    &quot;--directory&quot;,</span></span>
<span class="line"><span>    &quot;G:\\\\workspace\\\\idea\\\\py\\\\hello-mcp-server\\\\&quot;,</span></span>
<span class="line"><span>    &quot;run&quot;,</span></span>
<span class="line"><span>    &quot;--with&quot;,</span></span>
<span class="line"><span>    &quot;mcp&quot;,</span></span>
<span class="line"><span>    &quot;mcp&quot;,</span></span>
<span class="line"><span>    &quot;run&quot;,</span></span>
<span class="line"><span>    &quot;hello_mcp_server.py&quot;</span></span>
<span class="line"><span>  ],</span></span>
<span class="line"><span>&quot;disabled&quot;: false,</span></span>
<span class="line"><span>&quot;autoApprove&quot;: []</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>整个完整命令相当于：</strong></p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>uv --directory G:\\workspace\\idea\\py\\hello-mcp-server\\ run --with mcp mcp run hello_mcp_server.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>分为3段：</p><ol><li><code>uv --directory G:\\workspace\\idea\\py\\hello-mcp-server\\</code> 指定工作目录</li><li><code>run --with mcp</code> 运行时必须要有mcp包被安装</li><li><code>mcp run hello_mcp_server.py</code> 使用mcp启动server</li></ol><p>左边会生成对应的服务列表，点击“Done”退出</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybq87x7c4ANPFAQQZo9RwBLnUjGBNhNTt6yQOj0FXX9CR1JyBLSnc6AA/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><p>在Cline对话框中输入提示词：查一下订单为“ORDER-123456”的物流信息</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybPRibREKgV2CG8AdbMjuee8UypzdK46aBCQrbXv6Xy4L4z5ztJDVm20w/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><p>Cline开始调用MCP Server，点击“Approve”同意</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybSzicJic7SxytdicSp7OJwh4hHuTKtEVLYED85yp9GkWJ1slS9FP1R1Jfw/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><p>MCP Server调用成功</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vyb7kEsfRyGegYmPV4ymIMcbuhPF5TNcvDx3010SHc9w0qtUP9HV07dxg/640?wx_fmt=png&amp;from=appmsg" alt="span leaf=&quot;&quot;&gt;br&gt;/span&gt;" tabindex="0" loading="lazy"><figcaption>&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;</figcaption></figure><h3 id="_3-1-cline连接mcp-server的相关client源码" tabindex="-1"><a class="header-anchor" href="#_3-1-cline连接mcp-server的相关client源码"><span>3.1 Cline连接MCP Server的相关Client源码</span></a></h3><p>Cline(相当于MCP架构中的Host)源码中，MCP相关的代码在<code>src/services/mcp/McpHub.ts</code>中，MCP Clinet连接MCP  Server的代码在<code>connectToServer</code>:</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>private async connectToServer(name: string, config: StdioServerParameters): Promise&lt;void&gt; {</span></span>
<span class="line"><span>  ...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>try {</span></span>
<span class="line"><span>   // 创建新的MCP客户端实例，设置客户端名称和版本信息</span></span>
<span class="line"><span>   const client = new Client(</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>     name: &quot;Cline&quot;,</span></span>
<span class="line"><span>     version: this.providerRef.deref()?.context.extension?.packageJSON?.version ?? &quot;1.0.0&quot;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>     capabilities: {},        // 客户端没有给服务端暴露能力</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>   )</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   // 创建标准输入输出传输实例，配置命令、参数和环境变量</span></span>
<span class="line"><span>   // 这个是我们配置文件的内容</span></span>
<span class="line"><span>   const transport = new StdioClientTransport({</span></span>
<span class="line"><span>    command: config.command,</span></span>
<span class="line"><span>    args: config.args,</span></span>
<span class="line"><span>    env: {</span></span>
<span class="line"><span>     ...config.env,</span></span>
<span class="line"><span>     ...(process.env.PATH ? { PATH: process.env.PATH } : {}),</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    stderr: &quot;pipe&quot;, </span></span>
<span class="line"><span>   })</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            ......</span></span>
<span class="line"><span>            </span></span>
<span class="line"><span>   // 启动传输层，建立实际的进程间通信通道</span></span>
<span class="line"><span>   await transport.start()</span></span>
<span class="line"><span>   </span></span>
<span class="line"><span>   ...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   // 建立MCP客户端连接</span></span>
<span class="line"><span>   // 连接成功后更新服务器状态为已连接，清除错误信息</span></span>
<span class="line"><span>   // 初始化并获取服务器提供的工具和资源列表</span></span>
<span class="line"><span>   await client.connect(transport)</span></span>
<span class="line"><span>   connection.server.status = &quot;connected&quot;</span></span>
<span class="line"><span>   connection.server.error = &quot;&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>   // 初始化获取工具资源列表</span></span>
<span class="line"><span>   connection.server.tools = awaitthis.fetchToolsList(name)</span></span>
<span class="line"><span>   connection.server.resources = awaitthis.fetchResourcesList(name)</span></span>
<span class="line"><span>   connection.server.resourceTemplates = awaitthis.fetchResourceTemplatesList(name)</span></span>
<span class="line"><span>  } catch (error) {</span></span>
<span class="line"><span>   ......</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到目前为止我们实现了一个能提供Tool能力的MCP Server</p><p>往日推荐：</p><ol><li><a href="https://mp.weixin.qq.com/s?__biz=MzI4MjE1Nzc2MQ==&amp;mid=2649038516&amp;idx=1&amp;sn=172254bf26b3f7ff23f853f480e87a5e&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">从源码看OpenManus：如何用开源技术复刻Manus</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzI4MjE1Nzc2MQ==&amp;mid=2649038248&amp;idx=1&amp;sn=fb46934ddd6c12b261a4dcd23fb503ab&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">LangChain实战 | 路由机制让AI助手更聪明，专业问题交给专业模块！</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzI4MjE1Nzc2MQ==&amp;mid=2649038160&amp;idx=1&amp;sn=2c5087f3f823097352483e86a54be59b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">以前做PPT要3天，现在只要10分钟！DeepSeek+Kimi 让我效率起飞！</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzI4MjE1Nzc2MQ==&amp;mid=2649038076&amp;idx=1&amp;sn=c876b11f688e1efa065c80fe53b9807d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">LangChain实战 | MultiQueryRetriever 让 RAG 更懂你的问题</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzI4MjE1Nzc2MQ==&amp;mid=2649038009&amp;idx=1&amp;sn=ef85b93bec5d908b2b436b316f19a986&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">北京大学发布《DeepSeek提示词工程与落地场景》技术文档，推动国产AI应用创新</a></li></ol><figure><img src="https://mmbiz.qpic.cn/mmbiz_jpg/ko3ibXTD3NELPrDo2pTRDCrjba7NoOSElQlJzumtya910soFutD2XGib3oSicr70TziazoNq96bcEHNud8aJjVYcrw/640?wx_fmt=jpeg&amp;from=appmsg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>有需要的，在公众号「<strong>AI取经路</strong>」发消息「学习资料」即可获取。</p><p><strong>--END--</strong></p><p>点亮 <strong>“赞”<strong>和</strong>“在看”</strong>，**“分享”**好友一起看</p>`,179)])])}const c=a(p,[["render",t]]),m=JSON.parse('{"path":"/tld/ailab/aimcp.html","title":"AI MCP","lang":"zh-CN","frontmatter":{"description":"AI MCP autoMate 无代码自动化神器，让电脑任务“自己动起来” GitHub 仓库地址：https://github.com/yuruotong1/autoMate MCP-Playwright MCP-Playwright：AI自动化神器，可执行JS代码进行复杂交互任务！ 作者：AI研究生 AI大模型观察站 查看原文 最近笔者在用Next...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AI MCP\\",\\"image\\":[\\"https://mmbiz.qpic.cn/sz_mmbiz_jpg/6Ex6Atic0gTz2sZU3oeM2sqOoLovh7LwgicKgC4aCDvXN0rYdibwnWLY9WDnqDVu005pSseC9SMiaMDpCGDYXjogicA/640?wx_fmt=jpeg\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/sz_mmbiz_png/6Ex6Atic0gTz2sZU3oeM2sqOoLovh7LwgFd99ibJ6SmXwMibpKOl6z1dvWhOdiclwwP0LHhryo9Y6LFBmYPnAicyMjQ/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/sz_mmbiz_png/6Ex6Atic0gTz2sZU3oeM2sqOoLovh7Lwg1soSBvNUD2sWCSP0hI30EKuPGaib7lne2wVMQia5CVWSm8HUZYccYCCw/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/sz_mmbiz_png/6Ex6Atic0gTz2sZU3oeM2sqOoLovh7LwgagBtzvQPmAtrw66rsAjXC69tP56Vj4iahPcHFMr1WDwbGcaicndmO4jw/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/sz_mmbiz_png/6Ex6Atic0gTz2sZU3oeM2sqOoLovh7Lwg90iafM0d9xy5bZibTNAmCoSLpKtr1QdKf68ibCMbvDUSuznoq17iagbJSA/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/sz_mmbiz_png/6Ex6Atic0gTz2sZU3oeM2sqOoLovh7LwgUKeuibaVqSqlvZmgnaBAL40Cc5MoQLGQwCppDibwcibJw35IxCMVxWKoA/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/sz_mmbiz_png/6Ex6Atic0gTz2sZU3oeM2sqOoLovh7Lwg8gss0mxksbATwKLkGuwau1iaIIfseManpmqAFJJQESxib4YxsIibDyTsw/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/sz_mmbiz_gif/6Ex6Atic0gTzeibm9CCXcWPWujMu0GVELQr4GKLdtPBEl0L0X8iaQF4oooKwXvpoQewxeJqrjazZ1UP7DuTkHdpVQ/640?wx_fmt=gif\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybMKLre9NTvIQYlUw1lc0hVWAcQ8icgboib0BaKWWaPpUPEjFOH7S8Oftw/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybaTB3Zd25QM2UfyN1Wk3u7pPibZWnwR8FjZqRXicNuHMcD6Fm8yNytKFA/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybUnX88IU5WcdYqLh2rcQnnoPqj8w1IcBfhrTsgiaIPJBpCsYfVFMu6rw/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybYf4ziaNL3zmIdMEqsUTIIjPBWaUhKUKPa5InAdeQ10StsibuskLzZmKQ/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybDPreWrahvLcoTHrEzmNxHQBvgSUibp7sKy1ncVO4qjvH1Y1IX3vlD6w/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybdRkcicJkPua6OyPLRwb79WcVSibZqCJT0C49DrCHtvo1yfUTACorWd4Q/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybCVSGnxEmYrcbUpGQerNPjvicP1rbXdZJK6XHR8DQhjAPl5N40ev0GgQ/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybLJVvZxcgMG4iaM6TDZXaTpEByFSFTOdSStlHJJL7IcNdId8xJx246iaQ/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybib5fgzBlWxxtTjwDbZRqKnPD1G4TAo4JrHHyTylRnehokfKBrmwC8AQ/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybQ42ugOBC7WCIwrAOq9e7e1uIRe1CGeibKY3icicDtvJHCC5KNspHThq2A/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybicdYZEsViaibPxIDR14Nt7v4MBKsFxzGQQyfa8ibstnd1kmY6xnu0IDslA/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybMibxs7r0pw2xX6KpvBCQXhxIibibMHdOk7uYB2Cib11iaFyYoR8sxsNZJjw/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybMmjEypWIG2d5Lf8MMm8Fyr0rDgctZM2FO1icCyiafsvFqfyPUUEEFFgg/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybq87x7c4ANPFAQQZo9RwBLnUjGBNhNTt6yQOj0FXX9CR1JyBLSnc6AA/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybPRibREKgV2CG8AdbMjuee8UypzdK46aBCQrbXv6Xy4L4z5ztJDVm20w/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vybSzicJic7SxytdicSp7OJwh4hHuTKtEVLYED85yp9GkWJ1slS9FP1R1Jfw/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_png/ko3ibXTD3NELmMxVONY7HGo0kYdPe6vyb7kEsfRyGegYmPV4ymIMcbuhPF5TNcvDx3010SHc9w0qtUP9HV07dxg/640?wx_fmt=png\\\\\\\\&from=appmsg\\",\\"https://mmbiz.qpic.cn/mmbiz_jpg/ko3ibXTD3NELPrDo2pTRDCrjba7NoOSElQlJzumtya910soFutD2XGib3oSicr70TziazoNq96bcEHNud8aJjVYcrw/640?wx_fmt=jpeg\\\\\\\\&from=appmsg\\"],\\"dateModified\\":\\"2025-09-22T13:54:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SecCMD\\",\\"url\\":\\"https://www.seccmd.net\\"}]}"],["meta",{"property":"og:url","content":"https://www.seccmd.net/tld/ailab/aimcp.html"}],["meta",{"property":"og:site_name","content":"明剑实验室"}],["meta",{"property":"og:title","content":"AI MCP"}],["meta",{"property":"og:description","content":"AI MCP autoMate 无代码自动化神器，让电脑任务“自己动起来” GitHub 仓库地址：https://github.com/yuruotong1/autoMate MCP-Playwright MCP-Playwright：AI自动化神器，可执行JS代码进行复杂交互任务！ 作者：AI研究生 AI大模型观察站 查看原文 最近笔者在用Next..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mmbiz.qpic.cn/sz_mmbiz_jpg/6Ex6Atic0gTz2sZU3oeM2sqOoLovh7LwgicKgC4aCDvXN0rYdibwnWLY9WDnqDVu005pSseC9SMiaMDpCGDYXjogicA/640?wx_fmt=jpeg\\\\&from=appmsg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-22T13:54:52.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-22T13:54:52.000Z"}]]},"git":{"createdTime":1757419694000,"updatedTime":1758549292000,"contributors":[{"name":"fireadm","username":"fireadm","email":"iwanwu@hotmail.com","commits":2,"url":"https://github.com/fireadm"}]},"readingTime":{"minutes":12.37,"words":3711},"filePathRelative":"tld/ailab/aimcp.md","autoDesc":true}');export{c as comp,m as data};
