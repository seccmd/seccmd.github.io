import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as n,o as e}from"./app-DLxxumKf.js";const l={};function t(d,s){return e(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="docker-image" tabindex="-1"><a class="header-anchor" href="#docker-image"><span>Docker Image</span></a></h1><h3 id="docker-kali" tabindex="-1"><a class="header-anchor" href="#docker-kali"><span>Docker kali</span></a></h3><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-markdown"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## 官方镜像：</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## https://www.kali.org/docs/containers/official-kalilinux-docker-images/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker pull kalilinux/kali-rolling:latest</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker run -it --rm kalilinux/kali-rolling:latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## 安装默认工具包​​ kali-linux-default 元包（约 300+ 工具）： 下载安装 15G 文件</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">apt update &amp;&amp; sudo apt upgrade -y</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">apt install -y kali-linux-default</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## nmap 报错：需要网络权限</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker run --rm -it --cap-add=NET_RAW --cap-add=NET_ADMIN kalilinux/kali-rolling:latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">## 配置固化​​：始终使用 Dockerfile + docker-compose.yml 管理配置</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># docker-compose.yml 示例（避免手动操作）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">services:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  app:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    image: nginx:alpine</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cap_add:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - NET_ADMIN</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - NET_RAW</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ports:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - &quot;80:80&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - &quot;443:443&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="docker-nodejs" tabindex="-1"><a class="header-anchor" href="#docker-nodejs"><span>Docker nodejs</span></a></h3><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-markdown"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># Docker has specific installation instructions for each operating system.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># Please refer to the official documentation at https://docker.com/get-started/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># Pull the Node.js Docker image:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker pull node:22-alpine</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># Create a Node.js container and start a Shell session:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">docker run -it --rm --entrypoint sh node:22-alpine</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># Verify the Node.js version:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">node -v # Should print &quot;v22.17.0&quot;.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># Verify npm version:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">npm -v # Should print &quot;10.9.2&quot;.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5)])])}const c=i(l,[["render",t]]),o=JSON.parse('{"path":"/tld/dev/docker-image.html","title":"Docker Image","lang":"zh-CN","frontmatter":{"description":"Docker Image Docker kali Docker nodejs","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Docker Image\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-09T12:08:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"SecCMD\\",\\"url\\":\\"https://www.seccmd.net\\"}]}"],["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/tld/dev/docker-image.html"}],["meta",{"property":"og:site_name","content":"明剑实验室"}],["meta",{"property":"og:title","content":"Docker Image"}],["meta",{"property":"og:description","content":"Docker Image Docker kali Docker nodejs"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-09T12:08:14.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-09T12:08:14.000Z"}]]},"git":{"createdTime":1757419694000,"updatedTime":1757419694000,"contributors":[{"name":"fireadm","username":"fireadm","email":"iwanwu@hotmail.com","commits":1,"url":"https://github.com/fireadm"}]},"readingTime":{"minutes":0.63,"words":190},"filePathRelative":"tld/dev/docker-image.md","autoDesc":true}');export{c as comp,o as data};
